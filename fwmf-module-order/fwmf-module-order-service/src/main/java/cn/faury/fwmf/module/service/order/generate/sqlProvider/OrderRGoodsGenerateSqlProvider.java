/**
 * This file was generator by Fwmf Generated
 * ！！！Do not modify this file！！ 
 *
 * @fwmf.generated 2018-11-14 15:41:39
 */
package cn.faury.fwmf.module.service.order.generate.sqlProvider;

import cn.faury.fdk.common.utils.StringUtil;
import cn.faury.fwmf.module.api.order.generate.bean.OrderRGoodsGenerateBean;
import org.apache.ibatis.jdbc.SQL;

import java.util.List;
import java.util.Map;

public class OrderRGoodsGenerateSqlProvider {

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table order_t_order_r_goods
     *
     * @fwmf.generated 2018-11-14 15:41:39
     */
    public String insertSelective(OrderRGoodsGenerateBean record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("order_t_order_r_goods");
        
        if (record.getOrderRGoodsId() != null) {
            sql.VALUES("ORDER_R_GOODS_ID", "#{orderRGoodsId,jdbcType=BIGINT}");
        }
        
        if (record.getOrderId() != null) {
            sql.VALUES("ORDER_ID", "#{orderId,jdbcType=BIGINT}");
        }
        
        if (record.getShopId() != null) {
            sql.VALUES("SHOP_ID", "#{shopId,jdbcType=BIGINT}");
        }
        
        if (record.getStoreId() != null) {
            sql.VALUES("STORE_ID", "#{storeId,jdbcType=BIGINT}");
        }
        
        if (record.getGoodsId() != null) {
            sql.VALUES("GOODS_ID", "#{goodsId,jdbcType=BIGINT}");
        }
        
        if (record.getTdcCodeId() != null) {
            sql.VALUES("TDC_CODE_ID", "#{tdcCodeId,jdbcType=VARCHAR}");
        }
        
        if (record.getTdcCodePicUrl() != null) {
            sql.VALUES("TDC_CODE_PIC_URL", "#{tdcCodePicUrl,jdbcType=VARCHAR}");
        }
        
        if (record.getTitleImg() != null) {
            sql.VALUES("TITLE_IMG", "#{titleImg,jdbcType=VARCHAR}");
        }
        
        if (record.getGoodsName() != null) {
            sql.VALUES("GOODS_NAME", "#{goodsName,jdbcType=VARCHAR}");
        }
        
        if (record.getGoodsType() != null) {
            sql.VALUES("GOODS_TYPE", "#{goodsType,jdbcType=VARCHAR}");
        }
        
        if (record.getGoodsPrice() != null) {
            sql.VALUES("GOODS_PRICE", "#{goodsPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getBuyPrice() != null) {
            sql.VALUES("BUY_PRICE", "#{buyPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getGoodsStock() != null) {
            sql.VALUES("GOODS_STOCK", "#{goodsStock,jdbcType=INTEGER}");
        }
        
        if (record.getGoodsCount() != null) {
            sql.VALUES("GOODS_COUNT", "#{goodsCount,jdbcType=INTEGER}");
        }
        
        if (record.getBuySubtotal() != null) {
            sql.VALUES("BUY_SUBTOTAL", "#{buySubtotal,jdbcType=DECIMAL}");
        }
        
        if (record.getPromotionPriceId() != null) {
            sql.VALUES("PROMOTION_PRICE_ID", "#{promotionPriceId,jdbcType=BIGINT}");
        }
        
        if (record.getPromotionPriceName() != null) {
            sql.VALUES("PROMOTION_PRICE_NAME", "#{promotionPriceName,jdbcType=VARCHAR}");
        }
        
        if (record.getPromotionPriceAmount() != null) {
            sql.VALUES("PROMOTION_PRICE_AMOUNT", "#{promotionPriceAmount,jdbcType=DECIMAL}");
        }
        
        if (record.getGoodsPayPrice() != null) {
            sql.VALUES("GOODS_PAY_PRICE", "#{goodsPayPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getPostageId() != null) {
            sql.VALUES("POSTAGE_ID", "#{postageId,jdbcType=BIGINT}");
        }
        
        if (record.getPostPrice() != null) {
            sql.VALUES("POST_PRICE", "#{postPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getPromotionPostId() != null) {
            sql.VALUES("PROMOTION_POST_ID", "#{promotionPostId,jdbcType=BIGINT}");
        }
        
        if (record.getPromotionPostName() != null) {
            sql.VALUES("PROMOTION_POST_NAME", "#{promotionPostName,jdbcType=VARCHAR}");
        }
        
        if (record.getIsReceive() != null) {
            sql.VALUES("IS_RECEIVE", "#{isReceive,jdbcType=VARCHAR}");
        }
        
        if (record.getIsReviews() != null) {
            sql.VALUES("IS_REVIEWS", "#{isReviews,jdbcType=CHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table order_t_order_r_goods
     *
     * @fwmf.generated 2018-11-14 15:41:39
     */
    public String updateByPrimaryKeySelective(OrderRGoodsGenerateBean record) {
        SQL sql = new SQL();
        sql.UPDATE("order_t_order_r_goods");
        
        if (record.getOrderId() != null) {
            sql.SET("ORDER_ID = #{orderId,jdbcType=BIGINT}");
        }
        
        if (record.getShopId() != null) {
            sql.SET("SHOP_ID = #{shopId,jdbcType=BIGINT}");
        }
        
        if (record.getStoreId() != null) {
            sql.SET("STORE_ID = #{storeId,jdbcType=BIGINT}");
        }
        
        if (record.getGoodsId() != null) {
            sql.SET("GOODS_ID = #{goodsId,jdbcType=BIGINT}");
        }
        
        if (record.getTdcCodeId() != null) {
            sql.SET("TDC_CODE_ID = #{tdcCodeId,jdbcType=VARCHAR}");
        }
        
        if (record.getTdcCodePicUrl() != null) {
            sql.SET("TDC_CODE_PIC_URL = #{tdcCodePicUrl,jdbcType=VARCHAR}");
        }
        
        if (record.getTitleImg() != null) {
            sql.SET("TITLE_IMG = #{titleImg,jdbcType=VARCHAR}");
        }
        
        if (record.getGoodsName() != null) {
            sql.SET("GOODS_NAME = #{goodsName,jdbcType=VARCHAR}");
        }
        
        if (record.getGoodsType() != null) {
            sql.SET("GOODS_TYPE = #{goodsType,jdbcType=VARCHAR}");
        }
        
        if (record.getGoodsPrice() != null) {
            sql.SET("GOODS_PRICE = #{goodsPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getBuyPrice() != null) {
            sql.SET("BUY_PRICE = #{buyPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getGoodsStock() != null) {
            sql.SET("GOODS_STOCK = #{goodsStock,jdbcType=INTEGER}");
        }
        
        if (record.getGoodsCount() != null) {
            sql.SET("GOODS_COUNT = #{goodsCount,jdbcType=INTEGER}");
        }
        
        if (record.getBuySubtotal() != null) {
            sql.SET("BUY_SUBTOTAL = #{buySubtotal,jdbcType=DECIMAL}");
        }
        
        if (record.getPromotionPriceId() != null) {
            sql.SET("PROMOTION_PRICE_ID = #{promotionPriceId,jdbcType=BIGINT}");
        }
        
        if (record.getPromotionPriceName() != null) {
            sql.SET("PROMOTION_PRICE_NAME = #{promotionPriceName,jdbcType=VARCHAR}");
        }
        
        if (record.getPromotionPriceAmount() != null) {
            sql.SET("PROMOTION_PRICE_AMOUNT = #{promotionPriceAmount,jdbcType=DECIMAL}");
        }
        
        if (record.getGoodsPayPrice() != null) {
            sql.SET("GOODS_PAY_PRICE = #{goodsPayPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getPostageId() != null) {
            sql.SET("POSTAGE_ID = #{postageId,jdbcType=BIGINT}");
        }
        
        if (record.getPostPrice() != null) {
            sql.SET("POST_PRICE = #{postPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getPromotionPostId() != null) {
            sql.SET("PROMOTION_POST_ID = #{promotionPostId,jdbcType=BIGINT}");
        }
        
        if (record.getPromotionPostName() != null) {
            sql.SET("PROMOTION_POST_NAME = #{promotionPostName,jdbcType=VARCHAR}");
        }
        
        if (record.getIsReceive() != null) {
            sql.SET("IS_RECEIVE = #{isReceive,jdbcType=VARCHAR}");
        }
        
        if (record.getIsReviews() != null) {
            sql.SET("IS_REVIEWS = #{isReviews,jdbcType=CHAR}");
        }
        
        sql.WHERE("ORDER_R_GOODS_ID = #{orderRGoodsId,jdbcType=BIGINT}");
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table order_t_order_r_goods
     *
     * @fwmf.generated 2018-11-14 15:41:39
     */
    public String search(Map<String, Object> params) {
        SQL sql = new SQL();
        sql.SELECT("ORDER_R_GOODS_ID, ORDER_ID, SHOP_ID, STORE_ID, GOODS_ID, TDC_CODE_ID, TDC_CODE_PIC_URL");
        sql.SELECT("TITLE_IMG, GOODS_NAME, GOODS_TYPE, GOODS_PRICE, BUY_PRICE, GOODS_STOCK, GOODS_COUNT");
        sql.SELECT("BUY_SUBTOTAL, PROMOTION_PRICE_ID, PROMOTION_PRICE_NAME, PROMOTION_PRICE_AMOUNT, GOODS_PAY_PRICE");
        sql.SELECT("POSTAGE_ID, POST_PRICE, PROMOTION_POST_ID, PROMOTION_POST_NAME, IS_RECEIVE, IS_REVIEWS");
        
        sql.FROM("order_t_order_r_goods");
        
        if (params.get("orderRGoodsId") != null){
            if (!(params.get("orderRGoodsId") instanceof String) || StringUtil.isNotEmpty((String) params.get("orderRGoodsId"))){
                sql.WHERE("ORDER_R_GOODS_ID=#{orderRGoodsId,jdbcType=BIGINT}");
            }
        }
        if (params.get("ids") != null && params.get("ids") instanceof List) {
            List list = (List) params.get("ids");
            if (list != null && list.size() > 0) {
                StringBuilder inClause = new StringBuilder();
                for (int i = 0; i < list.size(); i++) {
                    inClause.append("#{ids[").append(i).append("],jdbcType=BIGINT},");
                }
                inClause.setLength(inClause.length() - 1);
                sql.WHERE("ORDER_R_GOODS_ID IN (" + inClause.toString() + ")");
            }
        }
        if (params.get("orderId") != null){
            if (!(params.get("orderId") instanceof String) || StringUtil.isNotEmpty((String) params.get("orderId"))){
                sql.WHERE("ORDER_ID=#{orderId,jdbcType=BIGINT}");
            }
        }
        if (params.get("shopId") != null){
            if (!(params.get("shopId") instanceof String) || StringUtil.isNotEmpty((String) params.get("shopId"))){
                sql.WHERE("SHOP_ID=#{shopId,jdbcType=BIGINT}");
            }
        }
        if (params.get("storeId") != null){
            if (!(params.get("storeId") instanceof String) || StringUtil.isNotEmpty((String) params.get("storeId"))){
                sql.WHERE("STORE_ID=#{storeId,jdbcType=BIGINT}");
            }
        }
        if (params.get("goodsId") != null){
            if (!(params.get("goodsId") instanceof String) || StringUtil.isNotEmpty((String) params.get("goodsId"))){
                sql.WHERE("GOODS_ID=#{goodsId,jdbcType=BIGINT}");
            }
        }
        if (params.get("tdcCodeId") != null){
            if (!(params.get("tdcCodeId") instanceof String) || StringUtil.isNotEmpty((String) params.get("tdcCodeId"))){
                sql.WHERE("TDC_CODE_ID=#{tdcCodeId,jdbcType=VARCHAR}");
            }
        }
        if (params.get("tdcCodeIdLike")!=null){
            if (!(params.get("tdcCodeIdLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("tdcCodeIdLike"))){
                sql.WHERE("TDC_CODE_ID LIKE CONCAT('%',#{tdcCodeIdLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("tdcCodePicUrl") != null){
            if (!(params.get("tdcCodePicUrl") instanceof String) || StringUtil.isNotEmpty((String) params.get("tdcCodePicUrl"))){
                sql.WHERE("TDC_CODE_PIC_URL=#{tdcCodePicUrl,jdbcType=VARCHAR}");
            }
        }
        if (params.get("tdcCodePicUrlLike")!=null){
            if (!(params.get("tdcCodePicUrlLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("tdcCodePicUrlLike"))){
                sql.WHERE("TDC_CODE_PIC_URL LIKE CONCAT('%',#{tdcCodePicUrlLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("titleImg") != null){
            if (!(params.get("titleImg") instanceof String) || StringUtil.isNotEmpty((String) params.get("titleImg"))){
                sql.WHERE("TITLE_IMG=#{titleImg,jdbcType=VARCHAR}");
            }
        }
        if (params.get("titleImgLike")!=null){
            if (!(params.get("titleImgLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("titleImgLike"))){
                sql.WHERE("TITLE_IMG LIKE CONCAT('%',#{titleImgLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("goodsName") != null){
            if (!(params.get("goodsName") instanceof String) || StringUtil.isNotEmpty((String) params.get("goodsName"))){
                sql.WHERE("GOODS_NAME=#{goodsName,jdbcType=VARCHAR}");
            }
        }
        if (params.get("goodsNameLike")!=null){
            if (!(params.get("goodsNameLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("goodsNameLike"))){
                sql.WHERE("GOODS_NAME LIKE CONCAT('%',#{goodsNameLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("goodsType") != null){
            if (!(params.get("goodsType") instanceof String) || StringUtil.isNotEmpty((String) params.get("goodsType"))){
                sql.WHERE("GOODS_TYPE=#{goodsType,jdbcType=VARCHAR}");
            }
        }
        if (params.get("goodsTypeLike")!=null){
            if (!(params.get("goodsTypeLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("goodsTypeLike"))){
                sql.WHERE("GOODS_TYPE LIKE CONCAT('%',#{goodsTypeLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("goodsPrice") != null){
            if (!(params.get("goodsPrice") instanceof String) || StringUtil.isNotEmpty((String) params.get("goodsPrice"))){
                sql.WHERE("GOODS_PRICE=#{goodsPrice,jdbcType=DECIMAL}");
            }
        }
        if (params.get("buyPrice") != null){
            if (!(params.get("buyPrice") instanceof String) || StringUtil.isNotEmpty((String) params.get("buyPrice"))){
                sql.WHERE("BUY_PRICE=#{buyPrice,jdbcType=DECIMAL}");
            }
        }
        if (params.get("goodsStock") != null){
            if (!(params.get("goodsStock") instanceof String) || StringUtil.isNotEmpty((String) params.get("goodsStock"))){
                sql.WHERE("GOODS_STOCK=#{goodsStock,jdbcType=INTEGER}");
            }
        }
        if (params.get("goodsCount") != null){
            if (!(params.get("goodsCount") instanceof String) || StringUtil.isNotEmpty((String) params.get("goodsCount"))){
                sql.WHERE("GOODS_COUNT=#{goodsCount,jdbcType=INTEGER}");
            }
        }
        if (params.get("buySubtotal") != null){
            if (!(params.get("buySubtotal") instanceof String) || StringUtil.isNotEmpty((String) params.get("buySubtotal"))){
                sql.WHERE("BUY_SUBTOTAL=#{buySubtotal,jdbcType=DECIMAL}");
            }
        }
        if (params.get("promotionPriceId") != null){
            if (!(params.get("promotionPriceId") instanceof String) || StringUtil.isNotEmpty((String) params.get("promotionPriceId"))){
                sql.WHERE("PROMOTION_PRICE_ID=#{promotionPriceId,jdbcType=BIGINT}");
            }
        }
        if (params.get("promotionPriceName") != null){
            if (!(params.get("promotionPriceName") instanceof String) || StringUtil.isNotEmpty((String) params.get("promotionPriceName"))){
                sql.WHERE("PROMOTION_PRICE_NAME=#{promotionPriceName,jdbcType=VARCHAR}");
            }
        }
        if (params.get("promotionPriceNameLike")!=null){
            if (!(params.get("promotionPriceNameLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("promotionPriceNameLike"))){
                sql.WHERE("PROMOTION_PRICE_NAME LIKE CONCAT('%',#{promotionPriceNameLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("promotionPriceAmount") != null){
            if (!(params.get("promotionPriceAmount") instanceof String) || StringUtil.isNotEmpty((String) params.get("promotionPriceAmount"))){
                sql.WHERE("PROMOTION_PRICE_AMOUNT=#{promotionPriceAmount,jdbcType=DECIMAL}");
            }
        }
        if (params.get("goodsPayPrice") != null){
            if (!(params.get("goodsPayPrice") instanceof String) || StringUtil.isNotEmpty((String) params.get("goodsPayPrice"))){
                sql.WHERE("GOODS_PAY_PRICE=#{goodsPayPrice,jdbcType=DECIMAL}");
            }
        }
        if (params.get("postageId") != null){
            if (!(params.get("postageId") instanceof String) || StringUtil.isNotEmpty((String) params.get("postageId"))){
                sql.WHERE("POSTAGE_ID=#{postageId,jdbcType=BIGINT}");
            }
        }
        if (params.get("postPrice") != null){
            if (!(params.get("postPrice") instanceof String) || StringUtil.isNotEmpty((String) params.get("postPrice"))){
                sql.WHERE("POST_PRICE=#{postPrice,jdbcType=DECIMAL}");
            }
        }
        if (params.get("promotionPostId") != null){
            if (!(params.get("promotionPostId") instanceof String) || StringUtil.isNotEmpty((String) params.get("promotionPostId"))){
                sql.WHERE("PROMOTION_POST_ID=#{promotionPostId,jdbcType=BIGINT}");
            }
        }
        if (params.get("promotionPostName") != null){
            if (!(params.get("promotionPostName") instanceof String) || StringUtil.isNotEmpty((String) params.get("promotionPostName"))){
                sql.WHERE("PROMOTION_POST_NAME=#{promotionPostName,jdbcType=VARCHAR}");
            }
        }
        if (params.get("promotionPostNameLike")!=null){
            if (!(params.get("promotionPostNameLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("promotionPostNameLike"))){
                sql.WHERE("PROMOTION_POST_NAME LIKE CONCAT('%',#{promotionPostNameLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("isReceive") != null){
            if (!(params.get("isReceive") instanceof String) || StringUtil.isNotEmpty((String) params.get("isReceive"))){
                sql.WHERE("IS_RECEIVE=#{isReceive,jdbcType=VARCHAR}");
            }
        }
        if (params.get("isReceiveLike")!=null){
            if (!(params.get("isReceiveLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("isReceiveLike"))){
                sql.WHERE("IS_RECEIVE LIKE CONCAT('%',#{isReceiveLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("isReviews") != null){
            if (!(params.get("isReviews") instanceof String) || StringUtil.isNotEmpty((String) params.get("isReviews"))){
                sql.WHERE("IS_REVIEWS=#{isReviews,jdbcType=CHAR}");
            }
        }
        if (params.get("isReviewsLike")!=null){
            if (!(params.get("isReviewsLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("isReviewsLike"))){
                sql.WHERE("IS_REVIEWS LIKE CONCAT('%',#{isReviewsLike,jdbcType=CHAR},'%')");
            }
        }
        if (params.get("ORDER_BY") != null){
            String orderBy = (String) params.get("ORDER_BY");
            String[] columns = orderBy.split(",");
            for (int i = 0; i < columns.length; i = i + 2) {
                if (i+1<columns.length){
                    sql.ORDER_BY(String.format("%s %s",columns[i],columns[i+1]));
                } else {
                    sql.ORDER_BY(columns[i]);
                }
            }
        }
        
        return sql.toString();
    }
}