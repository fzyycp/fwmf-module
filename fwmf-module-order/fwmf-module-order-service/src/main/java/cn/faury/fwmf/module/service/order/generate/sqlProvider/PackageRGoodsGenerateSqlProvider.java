/**
 * This file was generator by Fwmf Generated
 * ！！！Do not modify this file！！ 
 *
 * @fwmf.generated 2018-11-14 15:41:39
 */
package cn.faury.fwmf.module.service.order.generate.sqlProvider;

import cn.faury.fdk.common.utils.StringUtil;
import cn.faury.fwmf.module.api.order.generate.bean.PackageRGoodsGenerateBean;
import org.apache.ibatis.jdbc.SQL;

import java.util.List;
import java.util.Map;

public class PackageRGoodsGenerateSqlProvider {

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table order_t_package_r_goods
     *
     * @fwmf.generated 2018-11-14 15:41:39
     */
    public String insertSelective(PackageRGoodsGenerateBean record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("order_t_package_r_goods");
        
        if (record.getId() != null) {
            sql.VALUES("ID", "#{id,jdbcType=BIGINT}");
        }
        
        if (record.getPackageId() != null) {
            sql.VALUES("PACKAGE_ID", "#{packageId,jdbcType=BIGINT}");
        }
        
        if (record.getGoodsId() != null) {
            sql.VALUES("GOODS_ID", "#{goodsId,jdbcType=BIGINT}");
        }
        
        if (record.getGoodsType() != null) {
            sql.VALUES("GOODS_TYPE", "#{goodsType,jdbcType=VARCHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table order_t_package_r_goods
     *
     * @fwmf.generated 2018-11-14 15:41:39
     */
    public String updateByPrimaryKeySelective(PackageRGoodsGenerateBean record) {
        SQL sql = new SQL();
        sql.UPDATE("order_t_package_r_goods");
        
        if (record.getPackageId() != null) {
            sql.SET("PACKAGE_ID = #{packageId,jdbcType=BIGINT}");
        }
        
        if (record.getGoodsId() != null) {
            sql.SET("GOODS_ID = #{goodsId,jdbcType=BIGINT}");
        }
        
        if (record.getGoodsType() != null) {
            sql.SET("GOODS_TYPE = #{goodsType,jdbcType=VARCHAR}");
        }
        
        sql.WHERE("ID = #{id,jdbcType=BIGINT}");
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table order_t_package_r_goods
     *
     * @fwmf.generated 2018-11-14 15:41:39
     */
    public String search(Map<String, Object> params) {
        SQL sql = new SQL();
        sql.SELECT("ID, PACKAGE_ID, GOODS_ID, GOODS_TYPE");
        
        sql.FROM("order_t_package_r_goods");
        
        if (params.get("id") != null){
            if (!(params.get("id") instanceof String) || StringUtil.isNotEmpty((String) params.get("id"))){
                sql.WHERE("ID=#{id,jdbcType=BIGINT}");
            }
        }
        if (params.get("ids") != null && params.get("ids") instanceof List) {
            List list = (List) params.get("ids");
            if (list != null && list.size() > 0) {
                StringBuilder inClause = new StringBuilder();
                for (int i = 0; i < list.size(); i++) {
                    inClause.append("#{ids[").append(i).append("],jdbcType=BIGINT},");
                }
                inClause.setLength(inClause.length() - 1);
                sql.WHERE("ID IN (" + inClause.toString() + ")");
            }
        }
        if (params.get("packageId") != null){
            if (!(params.get("packageId") instanceof String) || StringUtil.isNotEmpty((String) params.get("packageId"))){
                sql.WHERE("PACKAGE_ID=#{packageId,jdbcType=BIGINT}");
            }
        }
        if (params.get("goodsId") != null){
            if (!(params.get("goodsId") instanceof String) || StringUtil.isNotEmpty((String) params.get("goodsId"))){
                sql.WHERE("GOODS_ID=#{goodsId,jdbcType=BIGINT}");
            }
        }
        if (params.get("goodsType") != null){
            if (!(params.get("goodsType") instanceof String) || StringUtil.isNotEmpty((String) params.get("goodsType"))){
                sql.WHERE("GOODS_TYPE=#{goodsType,jdbcType=VARCHAR}");
            }
        }
        if (params.get("goodsTypeLike")!=null){
            if (!(params.get("goodsTypeLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("goodsTypeLike"))){
                sql.WHERE("GOODS_TYPE LIKE CONCAT('%',#{goodsTypeLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("ORDER_BY") != null){
            String orderBy = (String) params.get("ORDER_BY");
            String[] columns = orderBy.split(",");
            for (int i = 0; i < columns.length; i = i + 2) {
                if (i+1<columns.length){
                    sql.ORDER_BY(String.format("%s %s",columns[i],columns[i+1]));
                } else {
                    sql.ORDER_BY(columns[i]);
                }
            }
        }
        
        return sql.toString();
    }
}