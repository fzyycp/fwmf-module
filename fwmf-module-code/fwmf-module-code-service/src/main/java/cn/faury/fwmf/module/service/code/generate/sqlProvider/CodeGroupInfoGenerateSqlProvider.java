/**
 * This file was generator by Fwmf Generated
 * ！！！Do not modify this file！！ 
 *
 * @fwmf.generated 2018-11-14 22:45:40
 */
package cn.faury.fwmf.module.service.code.generate.sqlProvider;

import cn.faury.fdk.common.utils.StringUtil;
import cn.faury.fwmf.module.api.code.generate.bean.CodeGroupInfoGenerateBean;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class CodeGroupInfoGenerateSqlProvider {

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_code_group_info
     *
     * @fwmf.generated 2018-11-14 22:45:40
     */
    public String insertSelective(CodeGroupInfoGenerateBean record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("sys_t_code_group_info");
        
        if (record.getCodeGroupId() != null) {
            sql.VALUES("CODE_GROUP_ID", "#{codeGroupId,jdbcType=BIGINT}");
        }
        
        if (record.getCodeGroupCode() != null) {
            sql.VALUES("CODE_GROUP_CODE", "#{codeGroupCode,jdbcType=VARCHAR}");
        }
        
        if (record.getCodeGroupName() != null) {
            sql.VALUES("CODE_GROUP_NAME", "#{codeGroupName,jdbcType=VARCHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_code_group_info
     *
     * @fwmf.generated 2018-11-14 22:45:40
     */
    public String updateByPrimaryKeySelective(CodeGroupInfoGenerateBean record) {
        SQL sql = new SQL();
        sql.UPDATE("sys_t_code_group_info");
        
        if (record.getCodeGroupCode() != null) {
            sql.SET("CODE_GROUP_CODE = #{codeGroupCode,jdbcType=VARCHAR}");
        }
        
        if (record.getCodeGroupName() != null) {
            sql.SET("CODE_GROUP_NAME = #{codeGroupName,jdbcType=VARCHAR}");
        }
        
        sql.WHERE("CODE_GROUP_ID = #{codeGroupId,jdbcType=BIGINT}");
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_code_group_info
     *
     * @fwmf.generated 2018-11-14 22:45:40
     */
    public String search(Map<String, Object> params) {
        SQL sql = new SQL();
        sql.SELECT("CODE_GROUP_ID, CODE_GROUP_CODE, CODE_GROUP_NAME");
        
        sql.FROM("sys_t_code_group_info");
        
        if (params.get("codeGroupId") != null){
            if (!(params.get("codeGroupId") instanceof String) || StringUtil.isNotEmpty((String) params.get("codeGroupId"))){
                sql.WHERE("CODE_GROUP_ID=#{codeGroupId,jdbcType=BIGINT}");
            }
        }
        if (params.get("ids") != null && params.get("ids") instanceof List) {
            List list = (List) params.get("ids");
            if (list != null && list.size() > 0) {
                StringBuilder inClause = new StringBuilder();
                for (int i = 0; i < list.size(); i++) {
                    inClause.append("#{ids[").append(i).append("],jdbcType=BIGINT},");
                }
                inClause.setLength(inClause.length() - 1);
                sql.WHERE("CODE_GROUP_ID IN (" + inClause.toString() + ")");
            }
        }
        if (params.get("codeGroupCode") != null){
            if (!(params.get("codeGroupCode") instanceof String) || StringUtil.isNotEmpty((String) params.get("codeGroupCode"))){
                sql.WHERE("CODE_GROUP_CODE=#{codeGroupCode,jdbcType=VARCHAR}");
            }
        }
        if (params.get("codeGroupCodeLike")!=null){
            if (!(params.get("codeGroupCodeLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("codeGroupCodeLike"))){
                sql.WHERE("CODE_GROUP_CODE LIKE CONCAT('%',#{codeGroupCodeLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("codeGroupName") != null){
            if (!(params.get("codeGroupName") instanceof String) || StringUtil.isNotEmpty((String) params.get("codeGroupName"))){
                sql.WHERE("CODE_GROUP_NAME=#{codeGroupName,jdbcType=VARCHAR}");
            }
        }
        if (params.get("codeGroupNameLike")!=null){
            if (!(params.get("codeGroupNameLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("codeGroupNameLike"))){
                sql.WHERE("CODE_GROUP_NAME LIKE CONCAT('%',#{codeGroupNameLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("ORDER_BY") != null){
            String orderBy = (String) params.get("ORDER_BY");
            String[] columns = orderBy.split(",");
            for (int i = 0; i < columns.length; i = i + 2) {
                if (i+1<columns.length){
                    sql.ORDER_BY(String.format("%s %s",columns[i],columns[i+1]));
                } else {
                    sql.ORDER_BY(columns[i]);
                }
            }
        }
        
        return sql.toString();
    }
}