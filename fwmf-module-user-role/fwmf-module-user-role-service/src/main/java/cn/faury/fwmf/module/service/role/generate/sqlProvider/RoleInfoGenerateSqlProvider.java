/**
 * This file was generator by Fwmf Generated
 * ！！！Do not modify this file！！ 
 *
 * @fwmf.generated 2018-09-21 14:58:58
 */
package cn.faury.fwmf.module.service.role.generate.sqlProvider;

import cn.faury.fwmf.module.api.role.generate.bean.RoleInfoGenerateBean;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class RoleInfoGenerateSqlProvider {

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_role_info
     *
     * @fwmf.generated 2018-09-21 14:58:58
     */
    public String insertSelective(RoleInfoGenerateBean record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("sys_t_role_info");
        
        if (record.getRoleId() != null) {
            sql.VALUES("ROLE_ID", "#{roleId,jdbcType=BIGINT}");
        }
        
        if (record.getRoleName() != null) {
            sql.VALUES("ROLE_NAME", "#{roleName,jdbcType=VARCHAR}");
        }
        
        if (record.getRoleCode() != null) {
            sql.VALUES("ROLE_CODE", "#{roleCode,jdbcType=VARCHAR}");
        }
        
        if (record.getIsAvailable() != null) {
            sql.VALUES("IS_AVAILABLE", "#{isAvailable,jdbcType=CHAR}");
        }
        
        if (record.getSystemId() != null) {
            sql.VALUES("SYSTEM_ID", "#{systemId,jdbcType=BIGINT}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_role_info
     *
     * @fwmf.generated 2018-09-21 14:58:58
     */
    public String updateByPrimaryKeySelective(RoleInfoGenerateBean record) {
        SQL sql = new SQL();
        sql.UPDATE("sys_t_role_info");
        
        if (record.getRoleName() != null) {
            sql.SET("ROLE_NAME = #{roleName,jdbcType=VARCHAR}");
        }
        
        if (record.getRoleCode() != null) {
            sql.SET("ROLE_CODE = #{roleCode,jdbcType=VARCHAR}");
        }
        
        if (record.getIsAvailable() != null) {
            sql.SET("IS_AVAILABLE = #{isAvailable,jdbcType=CHAR}");
        }
        
        if (record.getSystemId() != null) {
            sql.SET("SYSTEM_ID = #{systemId,jdbcType=BIGINT}");
        }
        
        sql.WHERE("ROLE_ID = #{roleId,jdbcType=BIGINT}");
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_role_info
     *
     * @fwmf.generated 2018-09-21 14:58:58
     */
    public String search(Map<String, Object> params) {
        SQL sql = new SQL();
        sql.SELECT("ROLE_ID, ROLE_NAME, ROLE_CODE, IS_AVAILABLE, SYSTEM_ID");
        
        sql.FROM("sys_t_role_info");
        
        if (params.get("roleId")!=null){
            sql.WHERE("ROLE_ID=#{roleId,jdbcType=BIGINT}");
        }
        if (params.get("roleName")!=null){
            sql.WHERE("ROLE_NAME=#{roleName,jdbcType=VARCHAR}");
        }
        if (params.get("roleNameLike")!=null){
            sql.WHERE("ROLE_NAME LIKE CONCAT('%',#{roleNameLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("roleCode")!=null){
            sql.WHERE("ROLE_CODE=#{roleCode,jdbcType=VARCHAR}");
        }
        if (params.get("roleCodeLike")!=null){
            sql.WHERE("ROLE_CODE LIKE CONCAT('%',#{roleCodeLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("isAvailable")!=null){
            sql.WHERE("IS_AVAILABLE=#{isAvailable,jdbcType=CHAR}");
        }
        if (params.get("isAvailableLike")!=null){
            sql.WHERE("IS_AVAILABLE LIKE CONCAT('%',#{isAvailableLike,jdbcType=CHAR},'%')");
        }
        if (params.get("systemId")!=null){
            sql.WHERE("SYSTEM_ID=#{systemId,jdbcType=BIGINT}");
        }
        if (params.get("ORDER_BY") != null){
            String orderBy = (String) params.get("ORDER_BY");
            String[] columns = orderBy.split(",");
            for (int i = 0; i < columns.length; i = i + 2) {
                if (i+1<columns.length){
                    sql.ORDER_BY(String.format("%s %s",columns[i],columns[i+1]));
                } else {
                    sql.ORDER_BY(columns[i]);
                }
            }
        }
        
        return sql.toString();
    }
}