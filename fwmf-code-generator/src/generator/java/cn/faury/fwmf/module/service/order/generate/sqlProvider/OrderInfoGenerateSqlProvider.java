/**
 * This file was generator by Fwmf Generated
 * ！！！Do not modify this file！！ 
 *
 * @fwmf.generated 2018-12-02 23:51:49
 */
package cn.faury.fwmf.module.service.order.generate.sqlProvider;

import cn.faury.fdk.common.utils.StringUtil;
import cn.faury.fwmf.module.api.order.generate.bean.OrderInfoGenerateBean;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class OrderInfoGenerateSqlProvider {

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table order_t_order_info
     *
     * @fwmf.generated 2018-12-02 23:51:49
     */
    public String insertSelective(OrderInfoGenerateBean record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("order_t_order_info");
        
        if (record.getOrderId() != null) {
            sql.VALUES("ORDER_ID", "#{orderId,jdbcType=BIGINT}");
        }
        
        if (record.getOrderCode() != null) {
            sql.VALUES("ORDER_CODE", "#{orderCode,jdbcType=CHAR}");
        }
        
        if (record.getBuyerId() != null) {
            sql.VALUES("BUYER_ID", "#{buyerId,jdbcType=BIGINT}");
        }
        
        if (record.getBuyerLogin() != null) {
            sql.VALUES("BUYER_LOGIN", "#{buyerLogin,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderState() != null) {
            sql.VALUES("ORDER_STATE", "#{orderState,jdbcType=CHAR}");
        }
        
        if (record.getGoodsCount() != null) {
            sql.VALUES("GOODS_COUNT", "#{goodsCount,jdbcType=INTEGER}");
        }
        
        if (record.getGoodsPrice() != null) {
            sql.VALUES("GOODS_PRICE", "#{goodsPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getPostPrice() != null) {
            sql.VALUES("POST_PRICE", "#{postPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getOrderPrice() != null) {
            sql.VALUES("ORDER_PRICE", "#{orderPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getGoodsPayPrice() != null) {
            sql.VALUES("GOODS_PAY_PRICE", "#{goodsPayPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getPostPayPrice() != null) {
            sql.VALUES("POST_PAY_PRICE", "#{postPayPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getOrderPayPrice() != null) {
            sql.VALUES("ORDER_PAY_PRICE", "#{orderPayPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getPayStyle() != null) {
            sql.VALUES("PAY_STYLE", "#{payStyle,jdbcType=CHAR}");
        }
        
        if (record.getBuyEntrance() != null) {
            sql.VALUES("BUY_ENTRANCE", "#{buyEntrance,jdbcType=CHAR}");
        }
        
        if (record.getAreaCodeProvince() != null) {
            sql.VALUES("AREA_CODE_PROVINCE", "#{areaCodeProvince,jdbcType=VARCHAR}");
        }
        
        if (record.getAreaDescProvince() != null) {
            sql.VALUES("AREA_DESC_PROVINCE", "#{areaDescProvince,jdbcType=VARCHAR}");
        }
        
        if (record.getAreaCodeCity() != null) {
            sql.VALUES("AREA_CODE_CITY", "#{areaCodeCity,jdbcType=VARCHAR}");
        }
        
        if (record.getAreaDescCity() != null) {
            sql.VALUES("AREA_DESC_CITY", "#{areaDescCity,jdbcType=VARCHAR}");
        }
        
        if (record.getAreaCodeCounty() != null) {
            sql.VALUES("AREA_CODE_COUNTY", "#{areaCodeCounty,jdbcType=VARCHAR}");
        }
        
        if (record.getAreaDescCounty() != null) {
            sql.VALUES("AREA_DESC_COUNTY", "#{areaDescCounty,jdbcType=VARCHAR}");
        }
        
        if (record.getSchoolName() != null) {
            sql.VALUES("SCHOOL_NAME", "#{schoolName,jdbcType=VARCHAR}");
        }
        
        if (record.getGradeName() != null) {
            sql.VALUES("GRADE_NAME", "#{gradeName,jdbcType=VARCHAR}");
        }
        
        if (record.getClassName() != null) {
            sql.VALUES("CLASS_NAME", "#{className,jdbcType=VARCHAR}");
        }
        
        if (record.getAddressDetail() != null) {
            sql.VALUES("ADDRESS_DETAIL", "#{addressDetail,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateTime() != null) {
            sql.VALUES("CREATE_TIME", "#{createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getExpiredTime() != null) {
            sql.VALUES("EXPIRED_TIME", "#{expiredTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatePerson() != null) {
            sql.VALUES("UPDATE_PERSON", "#{updatePerson,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.VALUES("UPDATE_TIME", "#{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getReceiverName() != null) {
            sql.VALUES("RECEIVER_NAME", "#{receiverName,jdbcType=VARCHAR}");
        }
        
        if (record.getTelNo() != null) {
            sql.VALUES("TEL_NO", "#{telNo,jdbcType=VARCHAR}");
        }
        
        if (record.getCodeNumber() != null) {
            sql.VALUES("CODE_NUMBER", "#{codeNumber,jdbcType=VARCHAR}");
        }
        
        if (record.getCodeUrl() != null) {
            sql.VALUES("CODE_URL", "#{codeUrl,jdbcType=VARCHAR}");
        }
        
        if (record.getRemark() != null) {
            sql.VALUES("REMARK", "#{remark,jdbcType=VARCHAR}");
        }
        
        if (record.getTradState() != null) {
            sql.VALUES("TRAD_STATE", "#{tradState,jdbcType=CHAR}");
        }
        
        if (record.getShopId() != null) {
            sql.VALUES("SHOP_ID", "#{shopId,jdbcType=BIGINT}");
        }
        
        if (record.getStoreId() != null) {
            sql.VALUES("STORE_ID", "#{storeId,jdbcType=BIGINT}");
        }
        
        if (record.getAgentUserId() != null) {
            sql.VALUES("AGENT_USER_ID", "#{agentUserId,jdbcType=BIGINT}");
        }
        
        if (record.getIsPickup() != null) {
            sql.VALUES("IS_PICKUP", "#{isPickup,jdbcType=CHAR}");
        }
        
        if (record.getExpressCode() != null) {
            sql.VALUES("EXPRESS_CODE", "#{expressCode,jdbcType=VARCHAR}");
        }
        
        if (record.getExpressName() != null) {
            sql.VALUES("EXPRESS_NAME", "#{expressName,jdbcType=VARCHAR}");
        }
        
        if (record.getExpressFee() != null) {
            sql.VALUES("EXPRESS_FEE", "#{expressFee,jdbcType=VARCHAR}");
        }
        
        if (record.getTrackNumber() != null) {
            sql.VALUES("TRACK_NUMBER", "#{trackNumber,jdbcType=VARCHAR}");
        }
        
        if (record.getPayRemark() != null) {
            sql.VALUES("PAY_REMARK", "#{payRemark,jdbcType=VARCHAR}");
        }
        
        if (record.getPayUpdatePerson() != null) {
            sql.VALUES("PAY_UPDATE_PERSON", "#{payUpdatePerson,jdbcType=VARCHAR}");
        }
        
        if (record.getPayUpdateTime() != null) {
            sql.VALUES("PAY_UPDATE_TIME", "#{payUpdateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getRefoundState() != null) {
            sql.VALUES("REFOUND_STATE", "#{refoundState,jdbcType=CHAR}");
        }
        
        if (record.getInvoice() != null) {
            sql.VALUES("INVOICE", "#{invoice,jdbcType=VARCHAR}");
        }
        
        if (record.getPayTime() != null) {
            sql.VALUES("PAY_TIME", "#{payTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getSendTime() != null) {
            sql.VALUES("SEND_TIME", "#{sendTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getConfirmTime() != null) {
            sql.VALUES("CONFIRM_TIME", "#{confirmTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIsGroupBuy() != null) {
            sql.VALUES("IS_GROUP_BUY", "#{isGroupBuy,jdbcType=CHAR}");
        }
        
        if (record.getIsRefund() != null) {
            sql.VALUES("IS_REFUND", "#{isRefund,jdbcType=CHAR}");
        }
        
        if (record.getIsAppOrder() != null) {
            sql.VALUES("IS_APP_ORDER", "#{isAppOrder,jdbcType=CHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table order_t_order_info
     *
     * @fwmf.generated 2018-12-02 23:51:49
     */
    public String updateByPrimaryKeySelective(OrderInfoGenerateBean record) {
        SQL sql = new SQL();
        sql.UPDATE("order_t_order_info");
        
        if (record.getOrderCode() != null) {
            sql.SET("ORDER_CODE = #{orderCode,jdbcType=CHAR}");
        }
        
        if (record.getBuyerId() != null) {
            sql.SET("BUYER_ID = #{buyerId,jdbcType=BIGINT}");
        }
        
        if (record.getBuyerLogin() != null) {
            sql.SET("BUYER_LOGIN = #{buyerLogin,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderState() != null) {
            sql.SET("ORDER_STATE = #{orderState,jdbcType=CHAR}");
        }
        
        if (record.getGoodsCount() != null) {
            sql.SET("GOODS_COUNT = #{goodsCount,jdbcType=INTEGER}");
        }
        
        if (record.getGoodsPrice() != null) {
            sql.SET("GOODS_PRICE = #{goodsPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getPostPrice() != null) {
            sql.SET("POST_PRICE = #{postPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getOrderPrice() != null) {
            sql.SET("ORDER_PRICE = #{orderPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getGoodsPayPrice() != null) {
            sql.SET("GOODS_PAY_PRICE = #{goodsPayPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getPostPayPrice() != null) {
            sql.SET("POST_PAY_PRICE = #{postPayPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getOrderPayPrice() != null) {
            sql.SET("ORDER_PAY_PRICE = #{orderPayPrice,jdbcType=DECIMAL}");
        }
        
        if (record.getPayStyle() != null) {
            sql.SET("PAY_STYLE = #{payStyle,jdbcType=CHAR}");
        }
        
        if (record.getBuyEntrance() != null) {
            sql.SET("BUY_ENTRANCE = #{buyEntrance,jdbcType=CHAR}");
        }
        
        if (record.getAreaCodeProvince() != null) {
            sql.SET("AREA_CODE_PROVINCE = #{areaCodeProvince,jdbcType=VARCHAR}");
        }
        
        if (record.getAreaDescProvince() != null) {
            sql.SET("AREA_DESC_PROVINCE = #{areaDescProvince,jdbcType=VARCHAR}");
        }
        
        if (record.getAreaCodeCity() != null) {
            sql.SET("AREA_CODE_CITY = #{areaCodeCity,jdbcType=VARCHAR}");
        }
        
        if (record.getAreaDescCity() != null) {
            sql.SET("AREA_DESC_CITY = #{areaDescCity,jdbcType=VARCHAR}");
        }
        
        if (record.getAreaCodeCounty() != null) {
            sql.SET("AREA_CODE_COUNTY = #{areaCodeCounty,jdbcType=VARCHAR}");
        }
        
        if (record.getAreaDescCounty() != null) {
            sql.SET("AREA_DESC_COUNTY = #{areaDescCounty,jdbcType=VARCHAR}");
        }
        
        if (record.getSchoolName() != null) {
            sql.SET("SCHOOL_NAME = #{schoolName,jdbcType=VARCHAR}");
        }
        
        if (record.getGradeName() != null) {
            sql.SET("GRADE_NAME = #{gradeName,jdbcType=VARCHAR}");
        }
        
        if (record.getClassName() != null) {
            sql.SET("CLASS_NAME = #{className,jdbcType=VARCHAR}");
        }
        
        if (record.getAddressDetail() != null) {
            sql.SET("ADDRESS_DETAIL = #{addressDetail,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getExpiredTime() != null) {
            sql.SET("EXPIRED_TIME = #{expiredTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatePerson() != null) {
            sql.SET("UPDATE_PERSON = #{updatePerson,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getReceiverName() != null) {
            sql.SET("RECEIVER_NAME = #{receiverName,jdbcType=VARCHAR}");
        }
        
        if (record.getTelNo() != null) {
            sql.SET("TEL_NO = #{telNo,jdbcType=VARCHAR}");
        }
        
        if (record.getCodeNumber() != null) {
            sql.SET("CODE_NUMBER = #{codeNumber,jdbcType=VARCHAR}");
        }
        
        if (record.getCodeUrl() != null) {
            sql.SET("CODE_URL = #{codeUrl,jdbcType=VARCHAR}");
        }
        
        if (record.getRemark() != null) {
            sql.SET("REMARK = #{remark,jdbcType=VARCHAR}");
        }
        
        if (record.getTradState() != null) {
            sql.SET("TRAD_STATE = #{tradState,jdbcType=CHAR}");
        }
        
        if (record.getShopId() != null) {
            sql.SET("SHOP_ID = #{shopId,jdbcType=BIGINT}");
        }
        
        if (record.getStoreId() != null) {
            sql.SET("STORE_ID = #{storeId,jdbcType=BIGINT}");
        }
        
        if (record.getAgentUserId() != null) {
            sql.SET("AGENT_USER_ID = #{agentUserId,jdbcType=BIGINT}");
        }
        
        if (record.getIsPickup() != null) {
            sql.SET("IS_PICKUP = #{isPickup,jdbcType=CHAR}");
        }
        
        if (record.getExpressCode() != null) {
            sql.SET("EXPRESS_CODE = #{expressCode,jdbcType=VARCHAR}");
        }
        
        if (record.getExpressName() != null) {
            sql.SET("EXPRESS_NAME = #{expressName,jdbcType=VARCHAR}");
        }
        
        if (record.getExpressFee() != null) {
            sql.SET("EXPRESS_FEE = #{expressFee,jdbcType=VARCHAR}");
        }
        
        if (record.getTrackNumber() != null) {
            sql.SET("TRACK_NUMBER = #{trackNumber,jdbcType=VARCHAR}");
        }
        
        if (record.getPayRemark() != null) {
            sql.SET("PAY_REMARK = #{payRemark,jdbcType=VARCHAR}");
        }
        
        if (record.getPayUpdatePerson() != null) {
            sql.SET("PAY_UPDATE_PERSON = #{payUpdatePerson,jdbcType=VARCHAR}");
        }
        
        if (record.getPayUpdateTime() != null) {
            sql.SET("PAY_UPDATE_TIME = #{payUpdateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getRefoundState() != null) {
            sql.SET("REFOUND_STATE = #{refoundState,jdbcType=CHAR}");
        }
        
        if (record.getInvoice() != null) {
            sql.SET("INVOICE = #{invoice,jdbcType=VARCHAR}");
        }
        
        if (record.getPayTime() != null) {
            sql.SET("PAY_TIME = #{payTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getSendTime() != null) {
            sql.SET("SEND_TIME = #{sendTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getConfirmTime() != null) {
            sql.SET("CONFIRM_TIME = #{confirmTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIsGroupBuy() != null) {
            sql.SET("IS_GROUP_BUY = #{isGroupBuy,jdbcType=CHAR}");
        }
        
        if (record.getIsRefund() != null) {
            sql.SET("IS_REFUND = #{isRefund,jdbcType=CHAR}");
        }
        
        if (record.getIsAppOrder() != null) {
            sql.SET("IS_APP_ORDER = #{isAppOrder,jdbcType=CHAR}");
        }
        
        sql.WHERE("ORDER_ID = #{orderId,jdbcType=BIGINT}");
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table order_t_order_info
     *
     * @fwmf.generated 2018-12-02 23:51:49
     */
    public String search(Map<String, Object> params) {
        SQL sql = new SQL();
        sql.SELECT("ORDER_ID, ORDER_CODE, BUYER_ID, BUYER_LOGIN, ORDER_STATE, GOODS_COUNT, GOODS_PRICE");
        sql.SELECT("POST_PRICE, ORDER_PRICE, GOODS_PAY_PRICE, POST_PAY_PRICE, ORDER_PAY_PRICE, PAY_STYLE");
        sql.SELECT("BUY_ENTRANCE, AREA_CODE_PROVINCE, AREA_DESC_PROVINCE, AREA_CODE_CITY, AREA_DESC_CITY");
        sql.SELECT("AREA_CODE_COUNTY, AREA_DESC_COUNTY, SCHOOL_NAME, GRADE_NAME, CLASS_NAME, ADDRESS_DETAIL");
        sql.SELECT("CREATE_TIME, EXPIRED_TIME, UPDATE_PERSON, UPDATE_TIME, RECEIVER_NAME, TEL_NO, CODE_NUMBER");
        sql.SELECT("CODE_URL, REMARK, TRAD_STATE, SHOP_ID, STORE_ID, AGENT_USER_ID, IS_PICKUP, EXPRESS_CODE");
        sql.SELECT("EXPRESS_NAME, EXPRESS_FEE, TRACK_NUMBER, PAY_REMARK, PAY_UPDATE_PERSON, PAY_UPDATE_TIME");
        sql.SELECT("REFOUND_STATE, INVOICE, PAY_TIME, SEND_TIME, CONFIRM_TIME, IS_GROUP_BUY, IS_REFUND");
        sql.SELECT("IS_APP_ORDER");
        
        sql.FROM("order_t_order_info");
        
        if (params.get("orderId") != null){
            if (!(params.get("orderId") instanceof String) || StringUtil.isNotEmpty((String) params.get("orderId"))){
                sql.WHERE("ORDER_ID=#{orderId,jdbcType=BIGINT}");
            }
        }
        if (params.get("ids") != null && params.get("ids") instanceof List) {
            List list = (List) params.get("ids");
            if (list != null && list.size() > 0) {
                StringBuilder inClause = new StringBuilder();
                for (int i = 0; i < list.size(); i++) {
                    inClause.append("#{ids[").append(i).append("],jdbcType=BIGINT},");
                }
                inClause.setLength(inClause.length() - 1);
                sql.WHERE("ORDER_ID IN (" + inClause.toString() + ")");
            }
        }
        if (params.get("orderCode") != null){
            if (!(params.get("orderCode") instanceof String) || StringUtil.isNotEmpty((String) params.get("orderCode"))){
                sql.WHERE("ORDER_CODE=#{orderCode,jdbcType=CHAR}");
            }
        }
        if (params.get("orderCodeLike")!=null){
            if (!(params.get("orderCodeLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("orderCodeLike"))){
                sql.WHERE("ORDER_CODE LIKE CONCAT('%',#{orderCodeLike,jdbcType=CHAR},'%')");
            }
        }
        if (params.get("buyerId") != null){
            if (!(params.get("buyerId") instanceof String) || StringUtil.isNotEmpty((String) params.get("buyerId"))){
                sql.WHERE("BUYER_ID=#{buyerId,jdbcType=BIGINT}");
            }
        }
        if (params.get("buyerLogin") != null){
            if (!(params.get("buyerLogin") instanceof String) || StringUtil.isNotEmpty((String) params.get("buyerLogin"))){
                sql.WHERE("BUYER_LOGIN=#{buyerLogin,jdbcType=VARCHAR}");
            }
        }
        if (params.get("buyerLoginLike")!=null){
            if (!(params.get("buyerLoginLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("buyerLoginLike"))){
                sql.WHERE("BUYER_LOGIN LIKE CONCAT('%',#{buyerLoginLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("orderState") != null){
            if (!(params.get("orderState") instanceof String) || StringUtil.isNotEmpty((String) params.get("orderState"))){
                sql.WHERE("ORDER_STATE=#{orderState,jdbcType=CHAR}");
            }
        }
        if (params.get("orderStateLike")!=null){
            if (!(params.get("orderStateLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("orderStateLike"))){
                sql.WHERE("ORDER_STATE LIKE CONCAT('%',#{orderStateLike,jdbcType=CHAR},'%')");
            }
        }
        if (params.get("goodsCount") != null){
            if (!(params.get("goodsCount") instanceof String) || StringUtil.isNotEmpty((String) params.get("goodsCount"))){
                sql.WHERE("GOODS_COUNT=#{goodsCount,jdbcType=INTEGER}");
            }
        }
        if (params.get("goodsPrice") != null){
            if (!(params.get("goodsPrice") instanceof String) || StringUtil.isNotEmpty((String) params.get("goodsPrice"))){
                sql.WHERE("GOODS_PRICE=#{goodsPrice,jdbcType=DECIMAL}");
            }
        }
        if (params.get("postPrice") != null){
            if (!(params.get("postPrice") instanceof String) || StringUtil.isNotEmpty((String) params.get("postPrice"))){
                sql.WHERE("POST_PRICE=#{postPrice,jdbcType=DECIMAL}");
            }
        }
        if (params.get("orderPrice") != null){
            if (!(params.get("orderPrice") instanceof String) || StringUtil.isNotEmpty((String) params.get("orderPrice"))){
                sql.WHERE("ORDER_PRICE=#{orderPrice,jdbcType=DECIMAL}");
            }
        }
        if (params.get("goodsPayPrice") != null){
            if (!(params.get("goodsPayPrice") instanceof String) || StringUtil.isNotEmpty((String) params.get("goodsPayPrice"))){
                sql.WHERE("GOODS_PAY_PRICE=#{goodsPayPrice,jdbcType=DECIMAL}");
            }
        }
        if (params.get("postPayPrice") != null){
            if (!(params.get("postPayPrice") instanceof String) || StringUtil.isNotEmpty((String) params.get("postPayPrice"))){
                sql.WHERE("POST_PAY_PRICE=#{postPayPrice,jdbcType=DECIMAL}");
            }
        }
        if (params.get("orderPayPrice") != null){
            if (!(params.get("orderPayPrice") instanceof String) || StringUtil.isNotEmpty((String) params.get("orderPayPrice"))){
                sql.WHERE("ORDER_PAY_PRICE=#{orderPayPrice,jdbcType=DECIMAL}");
            }
        }
        if (params.get("payStyle") != null){
            if (!(params.get("payStyle") instanceof String) || StringUtil.isNotEmpty((String) params.get("payStyle"))){
                sql.WHERE("PAY_STYLE=#{payStyle,jdbcType=CHAR}");
            }
        }
        if (params.get("payStyleLike")!=null){
            if (!(params.get("payStyleLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("payStyleLike"))){
                sql.WHERE("PAY_STYLE LIKE CONCAT('%',#{payStyleLike,jdbcType=CHAR},'%')");
            }
        }
        if (params.get("buyEntrance") != null){
            if (!(params.get("buyEntrance") instanceof String) || StringUtil.isNotEmpty((String) params.get("buyEntrance"))){
                sql.WHERE("BUY_ENTRANCE=#{buyEntrance,jdbcType=CHAR}");
            }
        }
        if (params.get("buyEntranceLike")!=null){
            if (!(params.get("buyEntranceLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("buyEntranceLike"))){
                sql.WHERE("BUY_ENTRANCE LIKE CONCAT('%',#{buyEntranceLike,jdbcType=CHAR},'%')");
            }
        }
        if (params.get("areaCodeProvince") != null){
            if (!(params.get("areaCodeProvince") instanceof String) || StringUtil.isNotEmpty((String) params.get("areaCodeProvince"))){
                sql.WHERE("AREA_CODE_PROVINCE=#{areaCodeProvince,jdbcType=VARCHAR}");
            }
        }
        if (params.get("areaCodeProvinceLike")!=null){
            if (!(params.get("areaCodeProvinceLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("areaCodeProvinceLike"))){
                sql.WHERE("AREA_CODE_PROVINCE LIKE CONCAT('%',#{areaCodeProvinceLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("areaDescProvince") != null){
            if (!(params.get("areaDescProvince") instanceof String) || StringUtil.isNotEmpty((String) params.get("areaDescProvince"))){
                sql.WHERE("AREA_DESC_PROVINCE=#{areaDescProvince,jdbcType=VARCHAR}");
            }
        }
        if (params.get("areaDescProvinceLike")!=null){
            if (!(params.get("areaDescProvinceLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("areaDescProvinceLike"))){
                sql.WHERE("AREA_DESC_PROVINCE LIKE CONCAT('%',#{areaDescProvinceLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("areaCodeCity") != null){
            if (!(params.get("areaCodeCity") instanceof String) || StringUtil.isNotEmpty((String) params.get("areaCodeCity"))){
                sql.WHERE("AREA_CODE_CITY=#{areaCodeCity,jdbcType=VARCHAR}");
            }
        }
        if (params.get("areaCodeCityLike")!=null){
            if (!(params.get("areaCodeCityLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("areaCodeCityLike"))){
                sql.WHERE("AREA_CODE_CITY LIKE CONCAT('%',#{areaCodeCityLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("areaDescCity") != null){
            if (!(params.get("areaDescCity") instanceof String) || StringUtil.isNotEmpty((String) params.get("areaDescCity"))){
                sql.WHERE("AREA_DESC_CITY=#{areaDescCity,jdbcType=VARCHAR}");
            }
        }
        if (params.get("areaDescCityLike")!=null){
            if (!(params.get("areaDescCityLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("areaDescCityLike"))){
                sql.WHERE("AREA_DESC_CITY LIKE CONCAT('%',#{areaDescCityLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("areaCodeCounty") != null){
            if (!(params.get("areaCodeCounty") instanceof String) || StringUtil.isNotEmpty((String) params.get("areaCodeCounty"))){
                sql.WHERE("AREA_CODE_COUNTY=#{areaCodeCounty,jdbcType=VARCHAR}");
            }
        }
        if (params.get("areaCodeCountyLike")!=null){
            if (!(params.get("areaCodeCountyLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("areaCodeCountyLike"))){
                sql.WHERE("AREA_CODE_COUNTY LIKE CONCAT('%',#{areaCodeCountyLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("areaDescCounty") != null){
            if (!(params.get("areaDescCounty") instanceof String) || StringUtil.isNotEmpty((String) params.get("areaDescCounty"))){
                sql.WHERE("AREA_DESC_COUNTY=#{areaDescCounty,jdbcType=VARCHAR}");
            }
        }
        if (params.get("areaDescCountyLike")!=null){
            if (!(params.get("areaDescCountyLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("areaDescCountyLike"))){
                sql.WHERE("AREA_DESC_COUNTY LIKE CONCAT('%',#{areaDescCountyLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("schoolName") != null){
            if (!(params.get("schoolName") instanceof String) || StringUtil.isNotEmpty((String) params.get("schoolName"))){
                sql.WHERE("SCHOOL_NAME=#{schoolName,jdbcType=VARCHAR}");
            }
        }
        if (params.get("schoolNameLike")!=null){
            if (!(params.get("schoolNameLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("schoolNameLike"))){
                sql.WHERE("SCHOOL_NAME LIKE CONCAT('%',#{schoolNameLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("gradeName") != null){
            if (!(params.get("gradeName") instanceof String) || StringUtil.isNotEmpty((String) params.get("gradeName"))){
                sql.WHERE("GRADE_NAME=#{gradeName,jdbcType=VARCHAR}");
            }
        }
        if (params.get("gradeNameLike")!=null){
            if (!(params.get("gradeNameLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("gradeNameLike"))){
                sql.WHERE("GRADE_NAME LIKE CONCAT('%',#{gradeNameLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("className") != null){
            if (!(params.get("className") instanceof String) || StringUtil.isNotEmpty((String) params.get("className"))){
                sql.WHERE("CLASS_NAME=#{className,jdbcType=VARCHAR}");
            }
        }
        if (params.get("classNameLike")!=null){
            if (!(params.get("classNameLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("classNameLike"))){
                sql.WHERE("CLASS_NAME LIKE CONCAT('%',#{classNameLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("addressDetail") != null){
            if (!(params.get("addressDetail") instanceof String) || StringUtil.isNotEmpty((String) params.get("addressDetail"))){
                sql.WHERE("ADDRESS_DETAIL=#{addressDetail,jdbcType=VARCHAR}");
            }
        }
        if (params.get("addressDetailLike")!=null){
            if (!(params.get("addressDetailLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("addressDetailLike"))){
                sql.WHERE("ADDRESS_DETAIL LIKE CONCAT('%',#{addressDetailLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("createTime") != null){
            if (!(params.get("createTime") instanceof String) || StringUtil.isNotEmpty((String) params.get("createTime"))){
                sql.WHERE("CREATE_TIME=#{createTime,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("createTimeStart")!=null){
            if (!(params.get("createTimeStart") instanceof String) || StringUtil.isNotEmpty((String) params.get("createTimeStart"))){
                sql.WHERE("CREATE_TIME >= #{createTimeStart,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("createTimeEnd")!=null){
            if (!(params.get("createTimeEnd") instanceof String) || StringUtil.isNotEmpty((String) params.get("createTimeEnd"))){
                sql.WHERE("CREATE_TIME <= #{createTimeEnd,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("expiredTime") != null){
            if (!(params.get("expiredTime") instanceof String) || StringUtil.isNotEmpty((String) params.get("expiredTime"))){
                sql.WHERE("EXPIRED_TIME=#{expiredTime,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("expiredTimeStart")!=null){
            if (!(params.get("expiredTimeStart") instanceof String) || StringUtil.isNotEmpty((String) params.get("expiredTimeStart"))){
                sql.WHERE("EXPIRED_TIME >= #{expiredTimeStart,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("expiredTimeEnd")!=null){
            if (!(params.get("expiredTimeEnd") instanceof String) || StringUtil.isNotEmpty((String) params.get("expiredTimeEnd"))){
                sql.WHERE("EXPIRED_TIME <= #{expiredTimeEnd,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("updatePerson") != null){
            if (!(params.get("updatePerson") instanceof String) || StringUtil.isNotEmpty((String) params.get("updatePerson"))){
                sql.WHERE("UPDATE_PERSON=#{updatePerson,jdbcType=VARCHAR}");
            }
        }
        if (params.get("updatePersonLike")!=null){
            if (!(params.get("updatePersonLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("updatePersonLike"))){
                sql.WHERE("UPDATE_PERSON LIKE CONCAT('%',#{updatePersonLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("updateTime") != null){
            if (!(params.get("updateTime") instanceof String) || StringUtil.isNotEmpty((String) params.get("updateTime"))){
                sql.WHERE("UPDATE_TIME=#{updateTime,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("updateTimeStart")!=null){
            if (!(params.get("updateTimeStart") instanceof String) || StringUtil.isNotEmpty((String) params.get("updateTimeStart"))){
                sql.WHERE("UPDATE_TIME >= #{updateTimeStart,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("updateTimeEnd")!=null){
            if (!(params.get("updateTimeEnd") instanceof String) || StringUtil.isNotEmpty((String) params.get("updateTimeEnd"))){
                sql.WHERE("UPDATE_TIME <= #{updateTimeEnd,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("receiverName") != null){
            if (!(params.get("receiverName") instanceof String) || StringUtil.isNotEmpty((String) params.get("receiverName"))){
                sql.WHERE("RECEIVER_NAME=#{receiverName,jdbcType=VARCHAR}");
            }
        }
        if (params.get("receiverNameLike")!=null){
            if (!(params.get("receiverNameLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("receiverNameLike"))){
                sql.WHERE("RECEIVER_NAME LIKE CONCAT('%',#{receiverNameLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("telNo") != null){
            if (!(params.get("telNo") instanceof String) || StringUtil.isNotEmpty((String) params.get("telNo"))){
                sql.WHERE("TEL_NO=#{telNo,jdbcType=VARCHAR}");
            }
        }
        if (params.get("telNoLike")!=null){
            if (!(params.get("telNoLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("telNoLike"))){
                sql.WHERE("TEL_NO LIKE CONCAT('%',#{telNoLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("codeNumber") != null){
            if (!(params.get("codeNumber") instanceof String) || StringUtil.isNotEmpty((String) params.get("codeNumber"))){
                sql.WHERE("CODE_NUMBER=#{codeNumber,jdbcType=VARCHAR}");
            }
        }
        if (params.get("codeNumberLike")!=null){
            if (!(params.get("codeNumberLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("codeNumberLike"))){
                sql.WHERE("CODE_NUMBER LIKE CONCAT('%',#{codeNumberLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("codeUrl") != null){
            if (!(params.get("codeUrl") instanceof String) || StringUtil.isNotEmpty((String) params.get("codeUrl"))){
                sql.WHERE("CODE_URL=#{codeUrl,jdbcType=VARCHAR}");
            }
        }
        if (params.get("codeUrlLike")!=null){
            if (!(params.get("codeUrlLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("codeUrlLike"))){
                sql.WHERE("CODE_URL LIKE CONCAT('%',#{codeUrlLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("remark") != null){
            if (!(params.get("remark") instanceof String) || StringUtil.isNotEmpty((String) params.get("remark"))){
                sql.WHERE("REMARK=#{remark,jdbcType=VARCHAR}");
            }
        }
        if (params.get("remarkLike")!=null){
            if (!(params.get("remarkLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("remarkLike"))){
                sql.WHERE("REMARK LIKE CONCAT('%',#{remarkLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("tradState") != null){
            if (!(params.get("tradState") instanceof String) || StringUtil.isNotEmpty((String) params.get("tradState"))){
                sql.WHERE("TRAD_STATE=#{tradState,jdbcType=CHAR}");
            }
        }
        if (params.get("tradStateLike")!=null){
            if (!(params.get("tradStateLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("tradStateLike"))){
                sql.WHERE("TRAD_STATE LIKE CONCAT('%',#{tradStateLike,jdbcType=CHAR},'%')");
            }
        }
        if (params.get("shopId") != null){
            if (!(params.get("shopId") instanceof String) || StringUtil.isNotEmpty((String) params.get("shopId"))){
                sql.WHERE("SHOP_ID=#{shopId,jdbcType=BIGINT}");
            }
        }
        if (params.get("storeId") != null){
            if (!(params.get("storeId") instanceof String) || StringUtil.isNotEmpty((String) params.get("storeId"))){
                sql.WHERE("STORE_ID=#{storeId,jdbcType=BIGINT}");
            }
        }
        if (params.get("agentUserId") != null){
            if (!(params.get("agentUserId") instanceof String) || StringUtil.isNotEmpty((String) params.get("agentUserId"))){
                sql.WHERE("AGENT_USER_ID=#{agentUserId,jdbcType=BIGINT}");
            }
        }
        if (params.get("isPickup") != null){
            if (!(params.get("isPickup") instanceof String) || StringUtil.isNotEmpty((String) params.get("isPickup"))){
                sql.WHERE("IS_PICKUP=#{isPickup,jdbcType=CHAR}");
            }
        }
        if (params.get("isPickupLike")!=null){
            if (!(params.get("isPickupLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("isPickupLike"))){
                sql.WHERE("IS_PICKUP LIKE CONCAT('%',#{isPickupLike,jdbcType=CHAR},'%')");
            }
        }
        if (params.get("expressCode") != null){
            if (!(params.get("expressCode") instanceof String) || StringUtil.isNotEmpty((String) params.get("expressCode"))){
                sql.WHERE("EXPRESS_CODE=#{expressCode,jdbcType=VARCHAR}");
            }
        }
        if (params.get("expressCodeLike")!=null){
            if (!(params.get("expressCodeLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("expressCodeLike"))){
                sql.WHERE("EXPRESS_CODE LIKE CONCAT('%',#{expressCodeLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("expressName") != null){
            if (!(params.get("expressName") instanceof String) || StringUtil.isNotEmpty((String) params.get("expressName"))){
                sql.WHERE("EXPRESS_NAME=#{expressName,jdbcType=VARCHAR}");
            }
        }
        if (params.get("expressNameLike")!=null){
            if (!(params.get("expressNameLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("expressNameLike"))){
                sql.WHERE("EXPRESS_NAME LIKE CONCAT('%',#{expressNameLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("expressFee") != null){
            if (!(params.get("expressFee") instanceof String) || StringUtil.isNotEmpty((String) params.get("expressFee"))){
                sql.WHERE("EXPRESS_FEE=#{expressFee,jdbcType=VARCHAR}");
            }
        }
        if (params.get("expressFeeLike")!=null){
            if (!(params.get("expressFeeLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("expressFeeLike"))){
                sql.WHERE("EXPRESS_FEE LIKE CONCAT('%',#{expressFeeLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("trackNumber") != null){
            if (!(params.get("trackNumber") instanceof String) || StringUtil.isNotEmpty((String) params.get("trackNumber"))){
                sql.WHERE("TRACK_NUMBER=#{trackNumber,jdbcType=VARCHAR}");
            }
        }
        if (params.get("trackNumberLike")!=null){
            if (!(params.get("trackNumberLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("trackNumberLike"))){
                sql.WHERE("TRACK_NUMBER LIKE CONCAT('%',#{trackNumberLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("payRemark") != null){
            if (!(params.get("payRemark") instanceof String) || StringUtil.isNotEmpty((String) params.get("payRemark"))){
                sql.WHERE("PAY_REMARK=#{payRemark,jdbcType=VARCHAR}");
            }
        }
        if (params.get("payRemarkLike")!=null){
            if (!(params.get("payRemarkLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("payRemarkLike"))){
                sql.WHERE("PAY_REMARK LIKE CONCAT('%',#{payRemarkLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("payUpdatePerson") != null){
            if (!(params.get("payUpdatePerson") instanceof String) || StringUtil.isNotEmpty((String) params.get("payUpdatePerson"))){
                sql.WHERE("PAY_UPDATE_PERSON=#{payUpdatePerson,jdbcType=VARCHAR}");
            }
        }
        if (params.get("payUpdatePersonLike")!=null){
            if (!(params.get("payUpdatePersonLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("payUpdatePersonLike"))){
                sql.WHERE("PAY_UPDATE_PERSON LIKE CONCAT('%',#{payUpdatePersonLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("payUpdateTime") != null){
            if (!(params.get("payUpdateTime") instanceof String) || StringUtil.isNotEmpty((String) params.get("payUpdateTime"))){
                sql.WHERE("PAY_UPDATE_TIME=#{payUpdateTime,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("payUpdateTimeStart")!=null){
            if (!(params.get("payUpdateTimeStart") instanceof String) || StringUtil.isNotEmpty((String) params.get("payUpdateTimeStart"))){
                sql.WHERE("PAY_UPDATE_TIME >= #{payUpdateTimeStart,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("payUpdateTimeEnd")!=null){
            if (!(params.get("payUpdateTimeEnd") instanceof String) || StringUtil.isNotEmpty((String) params.get("payUpdateTimeEnd"))){
                sql.WHERE("PAY_UPDATE_TIME <= #{payUpdateTimeEnd,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("refoundState") != null){
            if (!(params.get("refoundState") instanceof String) || StringUtil.isNotEmpty((String) params.get("refoundState"))){
                sql.WHERE("REFOUND_STATE=#{refoundState,jdbcType=CHAR}");
            }
        }
        if (params.get("refoundStateLike")!=null){
            if (!(params.get("refoundStateLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("refoundStateLike"))){
                sql.WHERE("REFOUND_STATE LIKE CONCAT('%',#{refoundStateLike,jdbcType=CHAR},'%')");
            }
        }
        if (params.get("invoice") != null){
            if (!(params.get("invoice") instanceof String) || StringUtil.isNotEmpty((String) params.get("invoice"))){
                sql.WHERE("INVOICE=#{invoice,jdbcType=VARCHAR}");
            }
        }
        if (params.get("invoiceLike")!=null){
            if (!(params.get("invoiceLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("invoiceLike"))){
                sql.WHERE("INVOICE LIKE CONCAT('%',#{invoiceLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("payTime") != null){
            if (!(params.get("payTime") instanceof String) || StringUtil.isNotEmpty((String) params.get("payTime"))){
                sql.WHERE("PAY_TIME=#{payTime,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("payTimeStart")!=null){
            if (!(params.get("payTimeStart") instanceof String) || StringUtil.isNotEmpty((String) params.get("payTimeStart"))){
                sql.WHERE("PAY_TIME >= #{payTimeStart,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("payTimeEnd")!=null){
            if (!(params.get("payTimeEnd") instanceof String) || StringUtil.isNotEmpty((String) params.get("payTimeEnd"))){
                sql.WHERE("PAY_TIME <= #{payTimeEnd,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("sendTime") != null){
            if (!(params.get("sendTime") instanceof String) || StringUtil.isNotEmpty((String) params.get("sendTime"))){
                sql.WHERE("SEND_TIME=#{sendTime,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("sendTimeStart")!=null){
            if (!(params.get("sendTimeStart") instanceof String) || StringUtil.isNotEmpty((String) params.get("sendTimeStart"))){
                sql.WHERE("SEND_TIME >= #{sendTimeStart,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("sendTimeEnd")!=null){
            if (!(params.get("sendTimeEnd") instanceof String) || StringUtil.isNotEmpty((String) params.get("sendTimeEnd"))){
                sql.WHERE("SEND_TIME <= #{sendTimeEnd,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("confirmTime") != null){
            if (!(params.get("confirmTime") instanceof String) || StringUtil.isNotEmpty((String) params.get("confirmTime"))){
                sql.WHERE("CONFIRM_TIME=#{confirmTime,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("confirmTimeStart")!=null){
            if (!(params.get("confirmTimeStart") instanceof String) || StringUtil.isNotEmpty((String) params.get("confirmTimeStart"))){
                sql.WHERE("CONFIRM_TIME >= #{confirmTimeStart,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("confirmTimeEnd")!=null){
            if (!(params.get("confirmTimeEnd") instanceof String) || StringUtil.isNotEmpty((String) params.get("confirmTimeEnd"))){
                sql.WHERE("CONFIRM_TIME <= #{confirmTimeEnd,jdbcType=TIMESTAMP}");
            }
        }
        if (params.get("isGroupBuy") != null){
            if (!(params.get("isGroupBuy") instanceof String) || StringUtil.isNotEmpty((String) params.get("isGroupBuy"))){
                sql.WHERE("IS_GROUP_BUY=#{isGroupBuy,jdbcType=CHAR}");
            }
        }
        if (params.get("isGroupBuyLike")!=null){
            if (!(params.get("isGroupBuyLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("isGroupBuyLike"))){
                sql.WHERE("IS_GROUP_BUY LIKE CONCAT('%',#{isGroupBuyLike,jdbcType=CHAR},'%')");
            }
        }
        if (params.get("isRefund") != null){
            if (!(params.get("isRefund") instanceof String) || StringUtil.isNotEmpty((String) params.get("isRefund"))){
                sql.WHERE("IS_REFUND=#{isRefund,jdbcType=CHAR}");
            }
        }
        if (params.get("isRefundLike")!=null){
            if (!(params.get("isRefundLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("isRefundLike"))){
                sql.WHERE("IS_REFUND LIKE CONCAT('%',#{isRefundLike,jdbcType=CHAR},'%')");
            }
        }
        if (params.get("isAppOrder") != null){
            if (!(params.get("isAppOrder") instanceof String) || StringUtil.isNotEmpty((String) params.get("isAppOrder"))){
                sql.WHERE("IS_APP_ORDER=#{isAppOrder,jdbcType=CHAR}");
            }
        }
        if (params.get("isAppOrderLike")!=null){
            if (!(params.get("isAppOrderLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("isAppOrderLike"))){
                sql.WHERE("IS_APP_ORDER LIKE CONCAT('%',#{isAppOrderLike,jdbcType=CHAR},'%')");
            }
        }
        if (params.get("ORDER_BY") != null){
            String orderBy = (String) params.get("ORDER_BY");
            String[] columns = orderBy.split(",");
            for (int i = 0; i < columns.length; i = i + 2) {
                if (i+1<columns.length){
                    sql.ORDER_BY(String.format("%s %s",columns[i],columns[i+1]));
                } else {
                    sql.ORDER_BY(columns[i]);
                }
            }
        }
        
        return sql.toString();
    }
}