/**
 * This file was generator by Fwmf Generated
 * ！！！Do not modify this file！！ 
 *
 * @fwmf.generated 2019-01-17 14:52:11
 */
package cn.faury.fwmf.module.service.systemconfig.generate.sqlProvider;

import cn.faury.fdk.common.utils.StringUtil;
import cn.faury.fwmf.module.api.systemconfig.generate.bean.SystemConfigGenerateBean;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class SystemConfigGenerateSqlProvider {

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_system_config
     *
     * @fwmf.generated 2019-01-17 14:52:11
     */
    public String insertSelective(SystemConfigGenerateBean record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("sys_t_system_config");
        
        if (record.getSystemConfigId() != null) {
            sql.VALUES("`SYSTEM_CONFIG_ID`", "#{systemConfigId,jdbcType=BIGINT}");
        }
        
        if (record.getSystemConfigKey() != null) {
            sql.VALUES("`SYSTEM_CONFIG_KEY`", "#{systemConfigKey,jdbcType=VARCHAR}");
        }
        
        if (record.getSystemConfigValue() != null) {
            sql.VALUES("`SYSTEM_CONFIG_VALUE`", "#{systemConfigValue,jdbcType=VARCHAR}");
        }
        
        if (record.getSystemConfigSystemId() != null) {
            sql.VALUES("`SYSTEM_CONFIG_SYSTEM_ID`", "#{systemConfigSystemId,jdbcType=BIGINT}");
        }
        
        if (record.getSystemConfigDesc() != null) {
            sql.VALUES("`SYSTEM_CONFIG_DESC`", "#{systemConfigDesc,jdbcType=VARCHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_system_config
     *
     * @fwmf.generated 2019-01-17 14:52:11
     */
    public String updateByPrimaryKeySelective(SystemConfigGenerateBean record) {
        SQL sql = new SQL();
        sql.UPDATE("sys_t_system_config");
        
        if (record.getSystemConfigKey() != null) {
            sql.SET("`SYSTEM_CONFIG_KEY` = #{systemConfigKey,jdbcType=VARCHAR}");
        }
        
        if (record.getSystemConfigValue() != null) {
            sql.SET("`SYSTEM_CONFIG_VALUE` = #{systemConfigValue,jdbcType=VARCHAR}");
        }
        
        if (record.getSystemConfigSystemId() != null) {
            sql.SET("`SYSTEM_CONFIG_SYSTEM_ID` = #{systemConfigSystemId,jdbcType=BIGINT}");
        }
        
        if (record.getSystemConfigDesc() != null) {
            sql.SET("`SYSTEM_CONFIG_DESC` = #{systemConfigDesc,jdbcType=VARCHAR}");
        }
        
        sql.WHERE("`SYSTEM_CONFIG_ID` = #{systemConfigId,jdbcType=BIGINT}");
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_system_config
     *
     * @fwmf.generated 2019-01-17 14:52:11
     */
    public String search(Map<String, Object> params) {
        SQL sql = new SQL();
        sql.SELECT("`SYSTEM_CONFIG_ID`, `SYSTEM_CONFIG_KEY`, `SYSTEM_CONFIG_VALUE`, `SYSTEM_CONFIG_SYSTEM_ID`");
        sql.SELECT("`SYSTEM_CONFIG_DESC`");
        
        sql.FROM("sys_t_system_config");
        
        if (params.get("systemConfigId") != null){
            if (!(params.get("systemConfigId") instanceof String) || StringUtil.isNotEmpty((String) params.get("systemConfigId"))){
                sql.WHERE("`SYSTEM_CONFIG_ID`=#{systemConfigId,jdbcType=BIGINT}");
            }
        }
        if (params.get("systemConfigIdNotEqual") != null){
            if (!(params.get("systemConfigIdNotEqual") instanceof String) || StringUtil.isNotEmpty((String) params.get("systemConfigIdNotEqual"))){
                sql.WHERE("`SYSTEM_CONFIG_ID` <> #{systemConfigId,jdbcType=BIGINT}");
            }
        }
        if (params.get("systemConfigIdInList") != null && params.get("systemConfigIdInList") instanceof List) {
            List list = (List) params.get("systemConfigIdInList");
            if (list != null && list.size() > 0) {
                StringBuilder inClause = new StringBuilder();
                for (int i = 0; i < list.size(); i++) {
                    inClause.append("#{systemConfigIdInList[").append(i).append("],jdbcType=BIGINT},");
                }
                inClause.setLength(inClause.length() - 1);
                sql.WHERE("`SYSTEM_CONFIG_ID` IN (" + inClause.toString() + ")");
            }
        }
        if (params.get("ids") != null && params.get("ids") instanceof List) {
            List list = (List) params.get("ids");
            if (list != null && list.size() > 0) {
                StringBuilder inClause = new StringBuilder();
                for (int i = 0; i < list.size(); i++) {
                    inClause.append("#{ids[").append(i).append("],jdbcType=BIGINT},");
                }
                inClause.setLength(inClause.length() - 1);
                sql.WHERE("`SYSTEM_CONFIG_ID` IN (" + inClause.toString() + ")");
            }
        }
        if (params.get("systemConfigKey") != null){
            if (!(params.get("systemConfigKey") instanceof String) || StringUtil.isNotEmpty((String) params.get("systemConfigKey"))){
                sql.WHERE("`SYSTEM_CONFIG_KEY`=#{systemConfigKey,jdbcType=VARCHAR}");
            }
        }
        if (params.get("systemConfigKeyNotEqual") != null){
            if (!(params.get("systemConfigKeyNotEqual") instanceof String) || StringUtil.isNotEmpty((String) params.get("systemConfigKeyNotEqual"))){
                sql.WHERE("`SYSTEM_CONFIG_KEY` <> #{systemConfigKey,jdbcType=VARCHAR}");
            }
        }
        if (params.get("systemConfigKeyInList") != null && params.get("systemConfigKeyInList") instanceof List) {
            List list = (List) params.get("systemConfigKeyInList");
            if (list != null && list.size() > 0) {
                StringBuilder inClause = new StringBuilder();
                for (int i = 0; i < list.size(); i++) {
                    inClause.append("#{systemConfigKeyInList[").append(i).append("],jdbcType=VARCHAR},");
                }
                inClause.setLength(inClause.length() - 1);
                sql.WHERE("`SYSTEM_CONFIG_KEY` IN (" + inClause.toString() + ")");
            }
        }
        if (params.get("systemConfigKeyLike")!=null){
            if (!(params.get("systemConfigKeyLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("systemConfigKeyLike"))){
                sql.WHERE("`SYSTEM_CONFIG_KEY` LIKE CONCAT('%',#{systemConfigKeyLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("systemConfigValue") != null){
            if (!(params.get("systemConfigValue") instanceof String) || StringUtil.isNotEmpty((String) params.get("systemConfigValue"))){
                sql.WHERE("`SYSTEM_CONFIG_VALUE`=#{systemConfigValue,jdbcType=VARCHAR}");
            }
        }
        if (params.get("systemConfigValueNotEqual") != null){
            if (!(params.get("systemConfigValueNotEqual") instanceof String) || StringUtil.isNotEmpty((String) params.get("systemConfigValueNotEqual"))){
                sql.WHERE("`SYSTEM_CONFIG_VALUE` <> #{systemConfigValue,jdbcType=VARCHAR}");
            }
        }
        if (params.get("systemConfigValueInList") != null && params.get("systemConfigValueInList") instanceof List) {
            List list = (List) params.get("systemConfigValueInList");
            if (list != null && list.size() > 0) {
                StringBuilder inClause = new StringBuilder();
                for (int i = 0; i < list.size(); i++) {
                    inClause.append("#{systemConfigValueInList[").append(i).append("],jdbcType=VARCHAR},");
                }
                inClause.setLength(inClause.length() - 1);
                sql.WHERE("`SYSTEM_CONFIG_VALUE` IN (" + inClause.toString() + ")");
            }
        }
        if (params.get("systemConfigValueLike")!=null){
            if (!(params.get("systemConfigValueLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("systemConfigValueLike"))){
                sql.WHERE("`SYSTEM_CONFIG_VALUE` LIKE CONCAT('%',#{systemConfigValueLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("systemConfigSystemId") != null){
            if (!(params.get("systemConfigSystemId") instanceof String) || StringUtil.isNotEmpty((String) params.get("systemConfigSystemId"))){
                sql.WHERE("`SYSTEM_CONFIG_SYSTEM_ID`=#{systemConfigSystemId,jdbcType=BIGINT}");
            }
        }
        if (params.get("systemConfigSystemIdNotEqual") != null){
            if (!(params.get("systemConfigSystemIdNotEqual") instanceof String) || StringUtil.isNotEmpty((String) params.get("systemConfigSystemIdNotEqual"))){
                sql.WHERE("`SYSTEM_CONFIG_SYSTEM_ID` <> #{systemConfigSystemId,jdbcType=BIGINT}");
            }
        }
        if (params.get("systemConfigSystemIdInList") != null && params.get("systemConfigSystemIdInList") instanceof List) {
            List list = (List) params.get("systemConfigSystemIdInList");
            if (list != null && list.size() > 0) {
                StringBuilder inClause = new StringBuilder();
                for (int i = 0; i < list.size(); i++) {
                    inClause.append("#{systemConfigSystemIdInList[").append(i).append("],jdbcType=BIGINT},");
                }
                inClause.setLength(inClause.length() - 1);
                sql.WHERE("`SYSTEM_CONFIG_SYSTEM_ID` IN (" + inClause.toString() + ")");
            }
        }
        if (params.get("systemConfigDesc") != null){
            if (!(params.get("systemConfigDesc") instanceof String) || StringUtil.isNotEmpty((String) params.get("systemConfigDesc"))){
                sql.WHERE("`SYSTEM_CONFIG_DESC`=#{systemConfigDesc,jdbcType=VARCHAR}");
            }
        }
        if (params.get("systemConfigDescNotEqual") != null){
            if (!(params.get("systemConfigDescNotEqual") instanceof String) || StringUtil.isNotEmpty((String) params.get("systemConfigDescNotEqual"))){
                sql.WHERE("`SYSTEM_CONFIG_DESC` <> #{systemConfigDesc,jdbcType=VARCHAR}");
            }
        }
        if (params.get("systemConfigDescInList") != null && params.get("systemConfigDescInList") instanceof List) {
            List list = (List) params.get("systemConfigDescInList");
            if (list != null && list.size() > 0) {
                StringBuilder inClause = new StringBuilder();
                for (int i = 0; i < list.size(); i++) {
                    inClause.append("#{systemConfigDescInList[").append(i).append("],jdbcType=VARCHAR},");
                }
                inClause.setLength(inClause.length() - 1);
                sql.WHERE("`SYSTEM_CONFIG_DESC` IN (" + inClause.toString() + ")");
            }
        }
        if (params.get("systemConfigDescLike")!=null){
            if (!(params.get("systemConfigDescLike") instanceof String) || StringUtil.isNotEmpty((String) params.get("systemConfigDescLike"))){
                sql.WHERE("`SYSTEM_CONFIG_DESC` LIKE CONCAT('%',#{systemConfigDescLike,jdbcType=VARCHAR},'%')");
            }
        }
        if (params.get("ORDER_BY") != null){
            String orderBy = (String) params.get("ORDER_BY");
            String[] columns = orderBy.split(",");
            for (int i = 0; i < columns.length; i = i + 2) {
                if (i+1<columns.length){
                    sql.ORDER_BY(String.format("`%s` %s",columns[i],columns[i+1]));
                } else {
                    sql.ORDER_BY(columns[i]);
                }
            }
        }
        
        return sql.toString();
    }
}