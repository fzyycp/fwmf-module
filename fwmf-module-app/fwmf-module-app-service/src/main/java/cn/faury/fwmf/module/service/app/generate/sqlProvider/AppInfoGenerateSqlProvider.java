/**
 * This file was generator by Fwmf Generated
 * ！！！Do not modify this file！！ 
 *
 * @fwmf.generated 2018-09-19 09:50:08
 */
package cn.faury.fwmf.module.service.app.generate.sqlProvider;

import cn.faury.fwmf.module.api.app.generate.bean.AppInfoGenerateBean;
import org.apache.ibatis.jdbc.SQL;

import java.util.Map;

public class AppInfoGenerateSqlProvider {

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_app_info
     *
     * @fwmf.generated 2018-09-19 09:50:08
     */
    public String insertSelective(AppInfoGenerateBean record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("sys_t_app_info");
        
        if (record.getAppId() != null) {
            sql.VALUES("APP_ID", "#{appId,jdbcType=BIGINT}");
        }
        
        if (record.getAppCode() != null) {
            sql.VALUES("APP_CODE", "#{appCode,jdbcType=VARCHAR}");
        }
        
        if (record.getAppName() != null) {
            sql.VALUES("APP_NAME", "#{appName,jdbcType=VARCHAR}");
        }
        
        if (record.getAppOs() != null) {
            sql.VALUES("APP_OS", "#{appOs,jdbcType=VARCHAR}");
        }
        
        if (record.getSystemId() != null) {
            sql.VALUES("SYSTEM_ID", "#{systemId,jdbcType=BIGINT}");
        }
        
        if (record.getRejectGuestUser() != null) {
            sql.VALUES("REJECT_GUEST_USER", "#{rejectGuestUser,jdbcType=CHAR}");
        }
        
        if (record.getRejectShoppingUser() != null) {
            sql.VALUES("REJECT_SHOPPING_USER", "#{rejectShoppingUser,jdbcType=CHAR}");
        }
        
        if (record.getAllowBackgroundUser() != null) {
            sql.VALUES("ALLOW_BACKGROUND_USER", "#{allowBackgroundUser,jdbcType=CHAR}");
        }
        
        if (record.getIsAvailable() != null) {
            sql.VALUES("IS_AVAILABLE", "#{isAvailable,jdbcType=CHAR}");
        }
        
        if (record.getTrackId() != null) {
            sql.VALUES("TRACK_ID", "#{trackId,jdbcType=VARCHAR}");
        }
        
        if (record.getServerDomain() != null) {
            sql.VALUES("SERVER_DOMAIN", "#{serverDomain,jdbcType=VARCHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_app_info
     *
     * @fwmf.generated 2018-09-19 09:50:08
     */
    public String updateByPrimaryKeySelective(AppInfoGenerateBean record) {
        SQL sql = new SQL();
        sql.UPDATE("sys_t_app_info");
        
        if (record.getAppCode() != null) {
            sql.SET("APP_CODE = #{appCode,jdbcType=VARCHAR}");
        }
        
        if (record.getAppName() != null) {
            sql.SET("APP_NAME = #{appName,jdbcType=VARCHAR}");
        }
        
        if (record.getAppOs() != null) {
            sql.SET("APP_OS = #{appOs,jdbcType=VARCHAR}");
        }
        
        if (record.getSystemId() != null) {
            sql.SET("SYSTEM_ID = #{systemId,jdbcType=BIGINT}");
        }
        
        if (record.getRejectGuestUser() != null) {
            sql.SET("REJECT_GUEST_USER = #{rejectGuestUser,jdbcType=CHAR}");
        }
        
        if (record.getRejectShoppingUser() != null) {
            sql.SET("REJECT_SHOPPING_USER = #{rejectShoppingUser,jdbcType=CHAR}");
        }
        
        if (record.getAllowBackgroundUser() != null) {
            sql.SET("ALLOW_BACKGROUND_USER = #{allowBackgroundUser,jdbcType=CHAR}");
        }
        
        if (record.getIsAvailable() != null) {
            sql.SET("IS_AVAILABLE = #{isAvailable,jdbcType=CHAR}");
        }
        
        if (record.getTrackId() != null) {
            sql.SET("TRACK_ID = #{trackId,jdbcType=VARCHAR}");
        }
        
        if (record.getServerDomain() != null) {
            sql.SET("SERVER_DOMAIN = #{serverDomain,jdbcType=VARCHAR}");
        }
        
        sql.WHERE("APP_ID = #{appId,jdbcType=BIGINT}");
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_app_info
     *
     * @fwmf.generated 2018-09-19 09:50:08
     */
    public String search(Map<String, Object> params) {
        SQL sql = new SQL();
        sql.SELECT("APP_ID, APP_CODE, APP_NAME, APP_OS, SYSTEM_ID, REJECT_GUEST_USER, REJECT_SHOPPING_USER");
        sql.SELECT("ALLOW_BACKGROUND_USER, IS_AVAILABLE, TRACK_ID, SERVER_DOMAIN");
        
        sql.FROM("sys_t_app_info");
        
        if (params.get("appId")!=null){
            sql.WHERE("APP_ID=#{appId,jdbcType=BIGINT}");
        }
        if (params.get("appCode")!=null){
            sql.WHERE("APP_CODE=#{appCode,jdbcType=VARCHAR}");
        }
        if (params.get("appCodeLike")!=null){
            sql.WHERE("APP_CODE LIKE CONCAT('%',#{appCodeLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("appName")!=null){
            sql.WHERE("APP_NAME=#{appName,jdbcType=VARCHAR}");
        }
        if (params.get("appNameLike")!=null){
            sql.WHERE("APP_NAME LIKE CONCAT('%',#{appNameLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("appOs")!=null){
            sql.WHERE("APP_OS=#{appOs,jdbcType=VARCHAR}");
        }
        if (params.get("appOsLike")!=null){
            sql.WHERE("APP_OS LIKE CONCAT('%',#{appOsLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("systemId")!=null){
            sql.WHERE("SYSTEM_ID=#{systemId,jdbcType=BIGINT}");
        }
        if (params.get("rejectGuestUser")!=null){
            sql.WHERE("REJECT_GUEST_USER=#{rejectGuestUser,jdbcType=CHAR}");
        }
        if (params.get("rejectGuestUserLike")!=null){
            sql.WHERE("REJECT_GUEST_USER LIKE CONCAT('%',#{rejectGuestUserLike,jdbcType=CHAR},'%')");
        }
        if (params.get("rejectShoppingUser")!=null){
            sql.WHERE("REJECT_SHOPPING_USER=#{rejectShoppingUser,jdbcType=CHAR}");
        }
        if (params.get("rejectShoppingUserLike")!=null){
            sql.WHERE("REJECT_SHOPPING_USER LIKE CONCAT('%',#{rejectShoppingUserLike,jdbcType=CHAR},'%')");
        }
        if (params.get("allowBackgroundUser")!=null){
            sql.WHERE("ALLOW_BACKGROUND_USER=#{allowBackgroundUser,jdbcType=CHAR}");
        }
        if (params.get("allowBackgroundUserLike")!=null){
            sql.WHERE("ALLOW_BACKGROUND_USER LIKE CONCAT('%',#{allowBackgroundUserLike,jdbcType=CHAR},'%')");
        }
        if (params.get("isAvailable")!=null){
            sql.WHERE("IS_AVAILABLE=#{isAvailable,jdbcType=CHAR}");
        }
        if (params.get("isAvailableLike")!=null){
            sql.WHERE("IS_AVAILABLE LIKE CONCAT('%',#{isAvailableLike,jdbcType=CHAR},'%')");
        }
        if (params.get("trackId")!=null){
            sql.WHERE("TRACK_ID=#{trackId,jdbcType=VARCHAR}");
        }
        if (params.get("trackIdLike")!=null){
            sql.WHERE("TRACK_ID LIKE CONCAT('%',#{trackIdLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("serverDomain")!=null){
            sql.WHERE("SERVER_DOMAIN=#{serverDomain,jdbcType=VARCHAR}");
        }
        if (params.get("serverDomainLike")!=null){
            sql.WHERE("SERVER_DOMAIN LIKE CONCAT('%',#{serverDomainLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("ORDER_BY") != null){
            String orderBy = (String) params.get("ORDER_BY");
            String[] columns = orderBy.split(",");
            for (int i = 0; i < columns.length; i = i + 2) {
                if (i+1<columns.length){
                    sql.ORDER_BY(String.format("%s %s",columns[i],columns[i+1]));
                } else {
                    sql.ORDER_BY(columns[i]);
                }
            }
        }
        
        return sql.toString();
    }
}