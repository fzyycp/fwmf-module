/**
 * This file was generator by Fwmf Generated
 * ！！！Do not modify this file！！ 
 *
 * @fwmf.generated 2018-09-19 09:50:08
 */
package cn.faury.fwmf.module.service.app.generate.sqlProvider;

import cn.faury.fwmf.module.api.app.generate.bean.AppVersionGenerateBean;
import org.apache.ibatis.jdbc.SQL;

import java.util.Map;

public class AppVersionGenerateSqlProvider {

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_app_version
     *
     * @fwmf.generated 2018-09-19 09:50:08
     */
    public String insertSelective(AppVersionGenerateBean record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("sys_t_app_version");
        
        if (record.getId() != null) {
            sql.VALUES("ID", "#{id,jdbcType=BIGINT}");
        }
        
        if (record.getSysType() != null) {
            sql.VALUES("SYS_TYPE", "#{sysType,jdbcType=VARCHAR}");
        }
        
        if (record.getVersionNum() != null) {
            sql.VALUES("VERSION_NUM", "#{versionNum,jdbcType=VARCHAR}");
        }
        
        if (record.getUrlType() != null) {
            sql.VALUES("URL_TYPE", "#{urlType,jdbcType=CHAR}");
        }
        
        if (record.getPath() != null) {
            sql.VALUES("PATH", "#{path,jdbcType=VARCHAR}");
        }
        
        if (record.getTitle() != null) {
            sql.VALUES("TITLE", "#{title,jdbcType=VARCHAR}");
        }
        
        if (record.getSize() != null) {
            sql.VALUES("SIZE", "#{size,jdbcType=BIGINT}");
        }
        
        if (record.getSysId() != null) {
            sql.VALUES("SYS_ID", "#{sysId,jdbcType=BIGINT}");
        }
        
        if (record.getAppId() != null) {
            sql.VALUES("APP_ID", "#{appId,jdbcType=BIGINT}");
        }
        
        if (record.getIsCoercion() != null) {
            sql.VALUES("IS_COERCION", "#{isCoercion,jdbcType=CHAR}");
        }
        
        if (record.getIsFormal() != null) {
            sql.VALUES("IS_FORMAL", "#{isFormal,jdbcType=CHAR}");
        }
        
        if (record.getIdentifier() != null) {
            sql.VALUES("IDENTIFIER", "#{identifier,jdbcType=VARCHAR}");
        }
        
        if (record.getMemo() != null) {
            sql.VALUES("MEMO", "#{memo,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatePerson() != null) {
            sql.VALUES("CREATE_PERSON", "#{createPerson,jdbcType=BIGINT}");
        }
        
        if (record.getCreatePersonName() != null) {
            sql.VALUES("CREATE_PERSON_NAME", "#{createPersonName,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateTime() != null) {
            sql.VALUES("CREATE_TIME", "#{createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatePerson() != null) {
            sql.VALUES("UPDATE_PERSON", "#{updatePerson,jdbcType=BIGINT}");
        }
        
        if (record.getUpdatePersonName() != null) {
            sql.VALUES("UPDATE_PERSON_NAME", "#{updatePersonName,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.VALUES("UPDATE_TIME", "#{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getDelFlag() != null) {
            sql.VALUES("DEL_FLAG", "#{delFlag,jdbcType=CHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_app_version
     *
     * @fwmf.generated 2018-09-19 09:50:08
     */
    public String updateByPrimaryKeySelective(AppVersionGenerateBean record) {
        SQL sql = new SQL();
        sql.UPDATE("sys_t_app_version");
        
        if (record.getSysType() != null) {
            sql.SET("SYS_TYPE = #{sysType,jdbcType=VARCHAR}");
        }
        
        if (record.getVersionNum() != null) {
            sql.SET("VERSION_NUM = #{versionNum,jdbcType=VARCHAR}");
        }
        
        if (record.getUrlType() != null) {
            sql.SET("URL_TYPE = #{urlType,jdbcType=CHAR}");
        }
        
        if (record.getPath() != null) {
            sql.SET("PATH = #{path,jdbcType=VARCHAR}");
        }
        
        if (record.getTitle() != null) {
            sql.SET("TITLE = #{title,jdbcType=VARCHAR}");
        }
        
        if (record.getSize() != null) {
            sql.SET("SIZE = #{size,jdbcType=BIGINT}");
        }
        
        if (record.getSysId() != null) {
            sql.SET("SYS_ID = #{sysId,jdbcType=BIGINT}");
        }
        
        if (record.getAppId() != null) {
            sql.SET("APP_ID = #{appId,jdbcType=BIGINT}");
        }
        
        if (record.getIsCoercion() != null) {
            sql.SET("IS_COERCION = #{isCoercion,jdbcType=CHAR}");
        }
        
        if (record.getIsFormal() != null) {
            sql.SET("IS_FORMAL = #{isFormal,jdbcType=CHAR}");
        }
        
        if (record.getIdentifier() != null) {
            sql.SET("IDENTIFIER = #{identifier,jdbcType=VARCHAR}");
        }
        
        if (record.getMemo() != null) {
            sql.SET("MEMO = #{memo,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatePerson() != null) {
            sql.SET("CREATE_PERSON = #{createPerson,jdbcType=BIGINT}");
        }
        
        if (record.getCreatePersonName() != null) {
            sql.SET("CREATE_PERSON_NAME = #{createPersonName,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatePerson() != null) {
            sql.SET("UPDATE_PERSON = #{updatePerson,jdbcType=BIGINT}");
        }
        
        if (record.getUpdatePersonName() != null) {
            sql.SET("UPDATE_PERSON_NAME = #{updatePersonName,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getDelFlag() != null) {
            sql.SET("DEL_FLAG = #{delFlag,jdbcType=CHAR}");
        }
        
        sql.WHERE("ID = #{id,jdbcType=BIGINT}");
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_app_version
     *
     * @fwmf.generated 2018-09-19 09:50:08
     */
    public String search(Map<String, Object> params) {
        SQL sql = new SQL();
        sql.SELECT("ID, SYS_TYPE, VERSION_NUM, URL_TYPE, PATH, TITLE, SIZE, SYS_ID, APP_ID, IS_COERCION");
        sql.SELECT("IS_FORMAL, IDENTIFIER, MEMO, CREATE_PERSON, CREATE_PERSON_NAME, CREATE_TIME, UPDATE_PERSON");
        sql.SELECT("UPDATE_PERSON_NAME, UPDATE_TIME, DEL_FLAG");
        
        sql.FROM("sys_t_app_version");
        
        if (params.get("id")!=null){
            sql.WHERE("ID=#{id,jdbcType=BIGINT}");
        }
        if (params.get("sysType")!=null){
            sql.WHERE("SYS_TYPE=#{sysType,jdbcType=VARCHAR}");
        }
        if (params.get("sysTypeLike")!=null){
            sql.WHERE("SYS_TYPE LIKE CONCAT('%',#{sysTypeLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("versionNum")!=null){
            sql.WHERE("VERSION_NUM=#{versionNum,jdbcType=VARCHAR}");
        }
        if (params.get("versionNumLike")!=null){
            sql.WHERE("VERSION_NUM LIKE CONCAT('%',#{versionNumLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("urlType")!=null){
            sql.WHERE("URL_TYPE=#{urlType,jdbcType=CHAR}");
        }
        if (params.get("urlTypeLike")!=null){
            sql.WHERE("URL_TYPE LIKE CONCAT('%',#{urlTypeLike,jdbcType=CHAR},'%')");
        }
        if (params.get("path")!=null){
            sql.WHERE("PATH=#{path,jdbcType=VARCHAR}");
        }
        if (params.get("pathLike")!=null){
            sql.WHERE("PATH LIKE CONCAT('%',#{pathLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("title")!=null){
            sql.WHERE("TITLE=#{title,jdbcType=VARCHAR}");
        }
        if (params.get("titleLike")!=null){
            sql.WHERE("TITLE LIKE CONCAT('%',#{titleLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("size")!=null){
            sql.WHERE("SIZE=#{size,jdbcType=BIGINT}");
        }
        if (params.get("sysId")!=null){
            sql.WHERE("SYS_ID=#{sysId,jdbcType=BIGINT}");
        }
        if (params.get("appId")!=null){
            sql.WHERE("APP_ID=#{appId,jdbcType=BIGINT}");
        }
        if (params.get("isCoercion")!=null){
            sql.WHERE("IS_COERCION=#{isCoercion,jdbcType=CHAR}");
        }
        if (params.get("isCoercionLike")!=null){
            sql.WHERE("IS_COERCION LIKE CONCAT('%',#{isCoercionLike,jdbcType=CHAR},'%')");
        }
        if (params.get("isFormal")!=null){
            sql.WHERE("IS_FORMAL=#{isFormal,jdbcType=CHAR}");
        }
        if (params.get("isFormalLike")!=null){
            sql.WHERE("IS_FORMAL LIKE CONCAT('%',#{isFormalLike,jdbcType=CHAR},'%')");
        }
        if (params.get("identifier")!=null){
            sql.WHERE("IDENTIFIER=#{identifier,jdbcType=VARCHAR}");
        }
        if (params.get("identifierLike")!=null){
            sql.WHERE("IDENTIFIER LIKE CONCAT('%',#{identifierLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("memo")!=null){
            sql.WHERE("MEMO=#{memo,jdbcType=VARCHAR}");
        }
        if (params.get("memoLike")!=null){
            sql.WHERE("MEMO LIKE CONCAT('%',#{memoLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("createPerson")!=null){
            sql.WHERE("CREATE_PERSON=#{createPerson,jdbcType=BIGINT}");
        }
        if (params.get("createPersonName")!=null){
            sql.WHERE("CREATE_PERSON_NAME=#{createPersonName,jdbcType=VARCHAR}");
        }
        if (params.get("createPersonNameLike")!=null){
            sql.WHERE("CREATE_PERSON_NAME LIKE CONCAT('%',#{createPersonNameLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("createTime")!=null){
            sql.WHERE("CREATE_TIME=#{createTime,jdbcType=TIMESTAMP}");
        }
        if (params.get("createTimeStart")!=null){
            sql.WHERE("CREATE_TIME >= #{createTimeStart,jdbcType=TIMESTAMP}");
        }
        if (params.get("createTimeEnd")!=null){
            sql.WHERE("CREATE_TIME <= #{createTimeEnd,jdbcType=TIMESTAMP}");
        }
        if (params.get("updatePerson")!=null){
            sql.WHERE("UPDATE_PERSON=#{updatePerson,jdbcType=BIGINT}");
        }
        if (params.get("updatePersonName")!=null){
            sql.WHERE("UPDATE_PERSON_NAME=#{updatePersonName,jdbcType=VARCHAR}");
        }
        if (params.get("updatePersonNameLike")!=null){
            sql.WHERE("UPDATE_PERSON_NAME LIKE CONCAT('%',#{updatePersonNameLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("updateTime")!=null){
            sql.WHERE("UPDATE_TIME=#{updateTime,jdbcType=TIMESTAMP}");
        }
        if (params.get("updateTimeStart")!=null){
            sql.WHERE("UPDATE_TIME >= #{updateTimeStart,jdbcType=TIMESTAMP}");
        }
        if (params.get("updateTimeEnd")!=null){
            sql.WHERE("UPDATE_TIME <= #{updateTimeEnd,jdbcType=TIMESTAMP}");
        }
        if (params.get("delFlag")!=null){
            sql.WHERE("DEL_FLAG=#{delFlag,jdbcType=CHAR}");
        }
        if (params.get("delFlagLike")!=null){
            sql.WHERE("DEL_FLAG LIKE CONCAT('%',#{delFlagLike,jdbcType=CHAR},'%')");
        }
        if (params.get("ORDER_BY") != null){
            String orderBy = (String) params.get("ORDER_BY");
            String[] columns = orderBy.split(",");
            for (int i = 0; i < columns.length; i = i + 2) {
                if (i+1<columns.length){
                    sql.ORDER_BY(String.format("%s %s",columns[i],columns[i+1]));
                } else {
                    sql.ORDER_BY(columns[i]);
                }
            }
        }
        
        return sql.toString();
    }
}