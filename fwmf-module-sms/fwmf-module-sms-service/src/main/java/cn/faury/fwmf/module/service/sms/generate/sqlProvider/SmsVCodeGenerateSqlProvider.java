/**
 * This file was generator by Fwmf Generated
 * ！！！Do not modify this file！！ 
 *
 * @fwmf.generated 2018-08-30 23:22:29
 */
package cn.faury.fwmf.module.service.sms.generate.sqlProvider;

import cn.faury.fwmf.module.api.sms.generate.bean.SmsVCodeGenerateBean;
import org.apache.ibatis.jdbc.SQL;

import java.util.Map;

public class SmsVCodeGenerateSqlProvider {

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_sms_vcode
     *
     * @fwmf.generated 2018-08-30 23:22:29
     */
    public String insertSelective(SmsVCodeGenerateBean record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("sys_t_sms_vcode");
        
        if (record.getSmsId() != null) {
            sql.VALUES("SMS_ID", "#{smsId,jdbcType=BIGINT}");
        }
        
        if (record.getUuid() != null) {
            sql.VALUES("UUID", "#{uuid,jdbcType=VARCHAR}");
        }
        
        if (record.getMobileNum() != null) {
            sql.VALUES("MOBILE_NUM", "#{mobileNum,jdbcType=VARCHAR}");
        }
        
        if (record.getvCode() != null) {
            sql.VALUES("V_CODE", "#{vCode,jdbcType=VARCHAR}");
        }
        
        if (record.getSaCode() != null) {
            sql.VALUES("SA_CODE", "#{saCode,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateTime() != null) {
            sql.VALUES("CREATE_TIME", "#{createTime,jdbcType=TIMESTAMP}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_sms_vcode
     *
     * @fwmf.generated 2018-08-30 23:22:29
     */
    public String updateByPrimaryKeySelective(SmsVCodeGenerateBean record) {
        SQL sql = new SQL();
        sql.UPDATE("sys_t_sms_vcode");
        
        if (record.getUuid() != null) {
            sql.SET("UUID = #{uuid,jdbcType=VARCHAR}");
        }
        
        if (record.getMobileNum() != null) {
            sql.SET("MOBILE_NUM = #{mobileNum,jdbcType=VARCHAR}");
        }
        
        if (record.getvCode() != null) {
            sql.SET("V_CODE = #{vCode,jdbcType=VARCHAR}");
        }
        
        if (record.getSaCode() != null) {
            sql.SET("SA_CODE = #{saCode,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}");
        }
        
        sql.WHERE("SMS_ID = #{smsId,jdbcType=BIGINT}");
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_sms_vcode
     *
     * @fwmf.generated 2018-08-30 23:22:29
     */
    public String search(Map<String, Object> params) {
        SQL sql = new SQL();
        sql.SELECT("SMS_ID, UUID, MOBILE_NUM, V_CODE, SA_CODE, CREATE_TIME");
        
        sql.FROM("sys_t_sms_vcode");
        
        if (params.get("smsId")!=null){
            sql.WHERE("SMS_ID=#{smsId,jdbcType=BIGINT}");
        }
        if (params.get("uuid")!=null){
            sql.WHERE("UUID=#{uuid,jdbcType=VARCHAR}");
        }
        if (params.get("uuidLike")!=null){
            sql.WHERE("UUID LIKE CONCAT('%',#{uuidLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("mobileNum")!=null){
            sql.WHERE("MOBILE_NUM=#{mobileNum,jdbcType=VARCHAR}");
        }
        if (params.get("mobileNumLike")!=null){
            sql.WHERE("MOBILE_NUM LIKE CONCAT('%',#{mobileNumLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("vCode")!=null){
            sql.WHERE("V_CODE=#{vCode,jdbcType=VARCHAR}");
        }
        if (params.get("vCodeLike")!=null){
            sql.WHERE("V_CODE LIKE CONCAT('%',#{vCodeLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("saCode")!=null){
            sql.WHERE("SA_CODE=#{saCode,jdbcType=VARCHAR}");
        }
        if (params.get("saCodeLike")!=null){
            sql.WHERE("SA_CODE LIKE CONCAT('%',#{saCodeLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("createTime")!=null){
            sql.WHERE("CREATE_TIME=#{createTime,jdbcType=TIMESTAMP}");
        }
        if (params.get("createTimeStart")!=null){
            sql.WHERE("CREATE_TIME >= #{createTimeStart,jdbcType=TIMESTAMP}");
        }
        if (params.get("createTimeEnd")!=null){
            sql.WHERE("CREATE_TIME <= #{createTimeEnd,jdbcType=TIMESTAMP}");
        }
        if (params.get("ORDER_BY") != null){
            String orderBy = (String) params.get("ORDER_BY");
            String[] columns = orderBy.split(",");
            for (int i = 0; i < columns.length; i = i + 2) {
                if (i+1<columns.length){
                    sql.ORDER_BY(String.format("%s %s",columns[i],columns[i+1]));
                } else {
                    sql.ORDER_BY(columns[i]);
                }
            }
        }
        
        return sql.toString();
    }
}