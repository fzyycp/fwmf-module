/**
 * This file was generator by Fwmf Generated
 * ！！！Do not modify this file！！ 
 *
 * @fwmf.generated 2018-09-26 11:34:22
 */
package cn.faury.fwmf.module.service.menu.generate.sqlProvider;

import cn.faury.fwmf.module.api.menu.generate.bean.MenuInfoGenerateBean;
import org.apache.ibatis.jdbc.SQL;

import java.util.Map;

public class MenuInfoGenerateSqlProvider {

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_menu_info
     *
     * @fwmf.generated 2018-09-26 11:34:22
     */
    public String insertSelective(MenuInfoGenerateBean record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("sys_t_menu_info");
        
        if (record.getMenuId() != null) {
            sql.VALUES("MENU_ID", "#{menuId,jdbcType=BIGINT}");
        }
        
        if (record.getMenuPid() != null) {
            sql.VALUES("MENU_PID", "#{menuPid,jdbcType=BIGINT}");
        }
        
        if (record.getMenuName() != null) {
            sql.VALUES("MENU_NAME", "#{menuName,jdbcType=VARCHAR}");
        }
        
        if (record.getMenuActionKey() != null) {
            sql.VALUES("MENU_ACTION_KEY", "#{menuActionKey,jdbcType=VARCHAR}");
        }
        
        if (record.getMenuCode() != null) {
            sql.VALUES("MENU_CODE", "#{menuCode,jdbcType=VARCHAR}");
        }
        
        if (record.getIsAvailable() != null) {
            sql.VALUES("IS_AVAILABLE", "#{isAvailable,jdbcType=CHAR}");
        }
        
        if (record.getIsLeaf() != null) {
            sql.VALUES("IS_LEAF", "#{isLeaf,jdbcType=CHAR}");
        }
        
        if (record.getSystemId() != null) {
            sql.VALUES("SYSTEM_ID", "#{systemId,jdbcType=BIGINT}");
        }
        
        if (record.getSort() != null) {
            sql.VALUES("SORT", "#{sort,jdbcType=INTEGER}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_menu_info
     *
     * @fwmf.generated 2018-09-26 11:34:22
     */
    public String updateByPrimaryKeySelective(MenuInfoGenerateBean record) {
        SQL sql = new SQL();
        sql.UPDATE("sys_t_menu_info");
        
        if (record.getMenuPid() != null) {
            sql.SET("MENU_PID = #{menuPid,jdbcType=BIGINT}");
        }
        
        if (record.getMenuName() != null) {
            sql.SET("MENU_NAME = #{menuName,jdbcType=VARCHAR}");
        }
        
        if (record.getMenuActionKey() != null) {
            sql.SET("MENU_ACTION_KEY = #{menuActionKey,jdbcType=VARCHAR}");
        }
        
        if (record.getMenuCode() != null) {
            sql.SET("MENU_CODE = #{menuCode,jdbcType=VARCHAR}");
        }
        
        if (record.getIsAvailable() != null) {
            sql.SET("IS_AVAILABLE = #{isAvailable,jdbcType=CHAR}");
        }
        
        if (record.getIsLeaf() != null) {
            sql.SET("IS_LEAF = #{isLeaf,jdbcType=CHAR}");
        }
        
        if (record.getSystemId() != null) {
            sql.SET("SYSTEM_ID = #{systemId,jdbcType=BIGINT}");
        }
        
        if (record.getSort() != null) {
            sql.SET("SORT = #{sort,jdbcType=INTEGER}");
        }
        
        sql.WHERE("MENU_ID = #{menuId,jdbcType=BIGINT}");
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_menu_info
     *
     * @fwmf.generated 2018-09-26 11:34:22
     */
    public String search(Map<String, Object> params) {
        SQL sql = new SQL();
        sql.SELECT("MENU_ID, MENU_PID, MENU_NAME, MENU_ACTION_KEY, MENU_CODE, IS_AVAILABLE, IS_LEAF");
        sql.SELECT("SYSTEM_ID, SORT");
        
        sql.FROM("sys_t_menu_info");
        
        if (params.get("menuId")!=null){
            sql.WHERE("MENU_ID=#{menuId,jdbcType=BIGINT}");
        }
        if (params.get("menuPid")!=null){
            sql.WHERE("MENU_PID=#{menuPid,jdbcType=BIGINT}");
        }
        if (params.get("menuName")!=null){
            sql.WHERE("MENU_NAME=#{menuName,jdbcType=VARCHAR}");
        }
        if (params.get("menuNameLike")!=null){
            sql.WHERE("MENU_NAME LIKE CONCAT('%',#{menuNameLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("menuActionKey")!=null){
            sql.WHERE("MENU_ACTION_KEY=#{menuActionKey,jdbcType=VARCHAR}");
        }
        if (params.get("menuActionKeyLike")!=null){
            sql.WHERE("MENU_ACTION_KEY LIKE CONCAT('%',#{menuActionKeyLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("menuCode")!=null){
            sql.WHERE("MENU_CODE=#{menuCode,jdbcType=VARCHAR}");
        }
        if (params.get("menuCodeLike")!=null){
            sql.WHERE("MENU_CODE LIKE CONCAT('%',#{menuCodeLike,jdbcType=VARCHAR},'%')");
        }
        if (params.get("isAvailable")!=null){
            sql.WHERE("IS_AVAILABLE=#{isAvailable,jdbcType=CHAR}");
        }
        if (params.get("isAvailableLike")!=null){
            sql.WHERE("IS_AVAILABLE LIKE CONCAT('%',#{isAvailableLike,jdbcType=CHAR},'%')");
        }
        if (params.get("isLeaf")!=null){
            sql.WHERE("IS_LEAF=#{isLeaf,jdbcType=CHAR}");
        }
        if (params.get("isLeafLike")!=null){
            sql.WHERE("IS_LEAF LIKE CONCAT('%',#{isLeafLike,jdbcType=CHAR},'%')");
        }
        if (params.get("systemId")!=null){
            sql.WHERE("SYSTEM_ID=#{systemId,jdbcType=BIGINT}");
        }
        if (params.get("sort")!=null){
            sql.WHERE("SORT=#{sort,jdbcType=INTEGER}");
        }
        if (params.get("ORDER_BY") != null){
            String orderBy = (String) params.get("ORDER_BY");
            String[] columns = orderBy.split(",");
            for (int i = 0; i < columns.length; i = i + 2) {
                if (i+1<columns.length){
                    sql.ORDER_BY(String.format("%s %s",columns[i],columns[i+1]));
                } else {
                    sql.ORDER_BY(columns[i]);
                }
            }
        }
        
        return sql.toString();
    }
}