/**
 * This file was generator by Fwmf Generated
 * ！！！Do not modify this file！！ 
 *
 * @fwmf.generated 2018-12-14 09:33:56
 */
package cn.faury.fwmf.module.service.menu.generate.sqlProvider;

import cn.faury.fdk.common.utils.StringUtil;
import cn.faury.fwmf.module.api.menu.generate.bean.RoleRFunctionGenerateBean;
import org.apache.ibatis.jdbc.SQL;

import java.util.List;
import java.util.Map;

public class RoleRFunctionGenerateSqlProvider {

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_role_r_function
     *
     * @fwmf.generated 2018-12-14 09:33:56
     */
    public String insertSelective(RoleRFunctionGenerateBean record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("sys_t_role_r_function");
        
        if (record.getId() != null) {
            sql.VALUES("`ID`", "#{id,jdbcType=BIGINT}");
        }
        
        if (record.getRoleId() != null) {
            sql.VALUES("`ROLE_ID`", "#{roleId,jdbcType=BIGINT}");
        }
        
        if (record.getFunctionId() != null) {
            sql.VALUES("`FUNCTION_ID`", "#{functionId,jdbcType=BIGINT}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_role_r_function
     *
     * @fwmf.generated 2018-12-14 09:33:56
     */
    public String updateByPrimaryKeySelective(RoleRFunctionGenerateBean record) {
        SQL sql = new SQL();
        sql.UPDATE("sys_t_role_r_function");
        
        if (record.getRoleId() != null) {
            sql.SET("`ROLE_ID` = #{roleId,jdbcType=BIGINT}");
        }
        
        if (record.getFunctionId() != null) {
            sql.SET("`FUNCTION_ID` = #{functionId,jdbcType=BIGINT}");
        }
        
        sql.WHERE("`ID` = #{id,jdbcType=BIGINT}");
        
        return sql.toString();
    }

    /**
     * This method was generated by Fwmf Generated.
     * This method corresponds to the database table sys_t_role_r_function
     *
     * @fwmf.generated 2018-12-14 09:33:56
     */
    public String search(Map<String, Object> params) {
        SQL sql = new SQL();
        sql.SELECT("`ID`, `ROLE_ID`, `FUNCTION_ID`");
        
        sql.FROM("sys_t_role_r_function");
        
        if (params.get("id") != null){
            if (!(params.get("id") instanceof String) || StringUtil.isNotEmpty((String) params.get("id"))){
                sql.WHERE("`ID`=#{id,jdbcType=BIGINT}");
            }
        }
        if (params.get("ids") != null && params.get("ids") instanceof List) {
            List list = (List) params.get("ids");
            if (list != null && list.size() > 0) {
                StringBuilder inClause = new StringBuilder();
                for (int i = 0; i < list.size(); i++) {
                    inClause.append("#{ids[").append(i).append("],jdbcType=BIGINT},");
                }
                inClause.setLength(inClause.length() - 1);
                sql.WHERE("`ID` IN (" + inClause.toString() + ")");
            }
        }
        if (params.get("roleId") != null){
            if (!(params.get("roleId") instanceof String) || StringUtil.isNotEmpty((String) params.get("roleId"))){
                sql.WHERE("`ROLE_ID`=#{roleId,jdbcType=BIGINT}");
            }
        }
        if (params.get("functionId") != null){
            if (!(params.get("functionId") instanceof String) || StringUtil.isNotEmpty((String) params.get("functionId"))){
                sql.WHERE("`FUNCTION_ID`=#{functionId,jdbcType=BIGINT}");
            }
        }
        if (params.get("ORDER_BY") != null){
            String orderBy = (String) params.get("ORDER_BY");
            String[] columns = orderBy.split(",");
            for (int i = 0; i < columns.length; i = i + 2) {
                if (i+1<columns.length){
                    sql.ORDER_BY(String.format("`%s` %s",columns[i],columns[i+1]));
                } else {
                    sql.ORDER_BY(columns[i]);
                }
            }
        }
        
        return sql.toString();
    }
}